[0.000000] (-) TimerEvent: {}
[0.000855] (omo_r1_cartographer) JobQueued: {'identifier': 'omo_r1_cartographer', 'dependencies': OrderedDict()}
[0.000946] (omo_r1_description) JobQueued: {'identifier': 'omo_r1_description', 'dependencies': OrderedDict()}
[0.000970] (omo_r1_gazebo) JobQueued: {'identifier': 'omo_r1_gazebo', 'dependencies': OrderedDict()}
[0.000985] (omo_r1_interfaces) JobQueued: {'identifier': 'omo_r1_interfaces', 'dependencies': OrderedDict()}
[0.001061] (omo_r1_navigation2) JobQueued: {'identifier': 'omo_r1_navigation2', 'dependencies': OrderedDict()}
[0.001077] (ydlidar_ros2_driver) JobQueued: {'identifier': 'ydlidar_ros2_driver', 'dependencies': OrderedDict()}
[0.001091] (ydlidar_sdk) JobQueued: {'identifier': 'ydlidar_sdk', 'dependencies': OrderedDict()}
[0.001104] (omo_r1_bringup) JobQueued: {'identifier': 'omo_r1_bringup', 'dependencies': OrderedDict({'omo_r1_description': '/home/mac/dev_ws/omo_robot/install/omo_r1_description', 'omo_r1_interfaces': '/home/mac/dev_ws/omo_robot/install/omo_r1_interfaces'})}
[0.001126] (omo_r1_teleop) JobQueued: {'identifier': 'omo_r1_teleop', 'dependencies': OrderedDict({'omo_r1_interfaces': '/home/mac/dev_ws/omo_robot/install/omo_r1_interfaces'})}
[0.001144] (omo_r1) JobQueued: {'identifier': 'omo_r1', 'dependencies': OrderedDict({'omo_r1_cartographer': '/home/mac/dev_ws/omo_robot/install/omo_r1_cartographer', 'omo_r1_description': '/home/mac/dev_ws/omo_robot/install/omo_r1_description', 'omo_r1_interfaces': '/home/mac/dev_ws/omo_robot/install/omo_r1_interfaces', 'omo_r1_navigation2': '/home/mac/dev_ws/omo_robot/install/omo_r1_navigation2', 'omo_r1_bringup': '/home/mac/dev_ws/omo_robot/install/omo_r1_bringup', 'omo_r1_teleop': '/home/mac/dev_ws/omo_robot/install/omo_r1_teleop'})}
[0.001178] (omo_r1_interfaces) JobStarted: {'identifier': 'omo_r1_interfaces'}
[0.012986] (omo_r1_description) JobStarted: {'identifier': 'omo_r1_description'}
[0.018809] (omo_r1_cartographer) JobStarted: {'identifier': 'omo_r1_cartographer'}
[0.023836] (omo_r1_navigation2) JobStarted: {'identifier': 'omo_r1_navigation2'}
[0.030459] (omo_r1_gazebo) JobStarted: {'identifier': 'omo_r1_gazebo'}
[0.036476] (ydlidar_ros2_driver) JobStarted: {'identifier': 'ydlidar_ros2_driver'}
[0.043528] (ydlidar_sdk) JobStarted: {'identifier': 'ydlidar_sdk'}
[0.051905] (omo_r1_interfaces) JobProgress: {'identifier': 'omo_r1_interfaces', 'progress': 'cmake'}
[0.052867] (omo_r1_interfaces) Command: {'cmd': ['/usr/bin/cmake', '/home/mac/dev_ws/omo_robot/src/omo_r1-ros2/omo_r1_interface', '-DCMAKE_INSTALL_PREFIX=/home/mac/dev_ws/omo_robot/install/omo_r1_interfaces'], 'cwd': '/home/mac/dev_ws/omo_robot/build/omo_r1_interfaces', 'env': OrderedDict({'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'XDG_ACTIVATION_TOKEN': 'gnome-shell/Terminator/4143-9-macpc_TIME8255253', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'GZ_SIM_RESOURCE_PATH': '/opt/ros/jazzy/share', 'USER': 'mac', 'GZ_CONFIG_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/share/gz:/opt/ros/jazzy/opt/sdformat_vendor/share/gz:/opt/ros/jazzy/opt/gz_gui_vendor/share/gz:/opt/ros/jazzy/opt/gz_transport_vendor/share/gz:/opt/ros/jazzy/opt/gz_rendering_vendor/share/gz:/opt/ros/jazzy/opt/gz_plugin_vendor/share/gz:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/share/gz:/opt/ros/jazzy/opt/gz_msgs_vendor/share/gz:/opt/ros/jazzy/opt/gz_common_vendor/share/gz', 'XDG_SESSION_TYPE': 'x11', 'CLUTTER_DISABLE_MIPMAPPED_TEXT': '1', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/lib:/opt/ros/jazzy/opt/gz_sensors_vendor/lib:/opt/ros/jazzy/opt/gz_physics_vendor/lib:/opt/ros/jazzy/opt/sdformat_vendor/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_gui_vendor/lib:/opt/ros/jazzy/opt/gz_transport_vendor/lib:/opt/ros/jazzy/opt/gz_rendering_vendor/lib:/opt/ros/jazzy/opt/gz_plugin_vendor/lib:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/lib:/opt/ros/jazzy/opt/gz_msgs_vendor/lib:/opt/ros/jazzy/opt/gz_common_vendor/lib:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_tools_vendor/lib:/opt/ros/jazzy/opt/gz_ogre_next_vendor/lib:/opt/ros/jazzy/opt/gz_dartsim_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/mac', 'OLDPWD': '/home/mac/dev_ws/omo_robot/src', 'DESKTOP_SESSION': 'ubuntu', 'NVM_BIN': '/home/mac/.nvm/versions/node/v22.12.0/bin', 'NVM_INC': '/home/mac/.nvm/versions/node/v22.12.0/include/node', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'PS1': '(ros_venv) \\[\\e[1;34m\\](ID: ${ROS_DOMAIN_ID:-0})\\[\\e[1;32m\\]\\u\\[\\e[0m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0m\\]$', 'MANAGERPID': '3781', 'SYSTEMD_EXEC_PID': '4143', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '74608', 'NVM_DIR': '/home/mac/.nvm', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'mac', 'IGN_GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share', 'JOURNAL_STREAM': '9:35938', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.Shell@x11.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'mac', 'TERM': 'xterm-256color', 'GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share:/home/mac/.gazebo/models:', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'WINDOWPATH': '2', 'PATH': '/home/mac/venv/ros_venv/bin:/opt/ros/jazzy/opt/gz_msgs_vendor/bin:/opt/ros/jazzy/opt/gz_tools_vendor/bin:/opt/ros/jazzy/opt/gz_ogre_next_vendor/bin:/opt/ros/jazzy/bin:/home/mac/.nvm/versions/node/v22.12.0/bin:/home/mac/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/macpc:@/tmp/.ICE-unix/4108,unix/macpc:/tmp/.ICE-unix/4108', 'INVOCATION_ID': '27a0dce060dd479b97afd7feace14a26', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':1', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'VIRTUAL_ENV_PROMPT': '(ros_venv)', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'ROS_DOMAIN_ID': '41', 'AMENT_PREFIX_PATH': '/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:708e2645-295c-4b99-833b-3c7f8755ba89', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'IGN_GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GJS_DEBUG_OUTPUT': 'stderr', 'VIRTUAL_ENV': '/home/mac/venv/ros_venv', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/mac/dev_ws/omo_robot/build/omo_r1_interfaces', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'NVM_CD_FLAGS': '', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'QTWEBENGINE_DICTIONARIES_PATH': '/usr/share/hunspell-bdic/', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor:/opt/ros/jazzy/opt/gz_sensors_vendor:/opt/ros/jazzy/opt/gz_physics_vendor:/opt/ros/jazzy/opt/sdformat_vendor:/opt/ros/jazzy/opt/gz_gui_vendor:/opt/ros/jazzy/opt/gz_transport_vendor:/opt/ros/jazzy/opt/gz_rendering_vendor:/opt/ros/jazzy/opt/gz_plugin_vendor:/opt/ros/jazzy/opt/gz_fuel_tools_vendor:/opt/ros/jazzy/opt/gz_msgs_vendor:/opt/ros/jazzy/opt/gz_common_vendor:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_tools_vendor:/opt/ros/jazzy/opt/gz_ogre_next_vendor:/opt/ros/jazzy/opt/gz_dartsim_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor:/opt/ros/jazzy'}), 'shell': False}
[0.056140] (omo_r1_description) JobProgress: {'identifier': 'omo_r1_description', 'progress': 'cmake'}
[0.057028] (omo_r1_description) Command: {'cmd': ['/usr/bin/cmake', '/home/mac/dev_ws/omo_robot/src/omo_r1-ros2/omo_r1_description', '-DCMAKE_INSTALL_PREFIX=/home/mac/dev_ws/omo_robot/install/omo_r1_description'], 'cwd': '/home/mac/dev_ws/omo_robot/build/omo_r1_description', 'env': OrderedDict({'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'XDG_ACTIVATION_TOKEN': 'gnome-shell/Terminator/4143-9-macpc_TIME8255253', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'GZ_SIM_RESOURCE_PATH': '/opt/ros/jazzy/share', 'USER': 'mac', 'GZ_CONFIG_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/share/gz:/opt/ros/jazzy/opt/sdformat_vendor/share/gz:/opt/ros/jazzy/opt/gz_gui_vendor/share/gz:/opt/ros/jazzy/opt/gz_transport_vendor/share/gz:/opt/ros/jazzy/opt/gz_rendering_vendor/share/gz:/opt/ros/jazzy/opt/gz_plugin_vendor/share/gz:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/share/gz:/opt/ros/jazzy/opt/gz_msgs_vendor/share/gz:/opt/ros/jazzy/opt/gz_common_vendor/share/gz', 'XDG_SESSION_TYPE': 'x11', 'CLUTTER_DISABLE_MIPMAPPED_TEXT': '1', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/lib:/opt/ros/jazzy/opt/gz_sensors_vendor/lib:/opt/ros/jazzy/opt/gz_physics_vendor/lib:/opt/ros/jazzy/opt/sdformat_vendor/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_gui_vendor/lib:/opt/ros/jazzy/opt/gz_transport_vendor/lib:/opt/ros/jazzy/opt/gz_rendering_vendor/lib:/opt/ros/jazzy/opt/gz_plugin_vendor/lib:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/lib:/opt/ros/jazzy/opt/gz_msgs_vendor/lib:/opt/ros/jazzy/opt/gz_common_vendor/lib:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_tools_vendor/lib:/opt/ros/jazzy/opt/gz_ogre_next_vendor/lib:/opt/ros/jazzy/opt/gz_dartsim_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/mac', 'OLDPWD': '/home/mac/dev_ws/omo_robot/src', 'DESKTOP_SESSION': 'ubuntu', 'NVM_BIN': '/home/mac/.nvm/versions/node/v22.12.0/bin', 'NVM_INC': '/home/mac/.nvm/versions/node/v22.12.0/include/node', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'PS1': '(ros_venv) \\[\\e[1;34m\\](ID: ${ROS_DOMAIN_ID:-0})\\[\\e[1;32m\\]\\u\\[\\e[0m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0m\\]$', 'MANAGERPID': '3781', 'SYSTEMD_EXEC_PID': '4143', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '74608', 'NVM_DIR': '/home/mac/.nvm', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'mac', 'IGN_GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share', 'JOURNAL_STREAM': '9:35938', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.Shell@x11.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'mac', 'TERM': 'xterm-256color', 'GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share:/home/mac/.gazebo/models:', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'WINDOWPATH': '2', 'PATH': '/home/mac/venv/ros_venv/bin:/opt/ros/jazzy/opt/gz_msgs_vendor/bin:/opt/ros/jazzy/opt/gz_tools_vendor/bin:/opt/ros/jazzy/opt/gz_ogre_next_vendor/bin:/opt/ros/jazzy/bin:/home/mac/.nvm/versions/node/v22.12.0/bin:/home/mac/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/macpc:@/tmp/.ICE-unix/4108,unix/macpc:/tmp/.ICE-unix/4108', 'INVOCATION_ID': '27a0dce060dd479b97afd7feace14a26', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':1', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'VIRTUAL_ENV_PROMPT': '(ros_venv)', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'ROS_DOMAIN_ID': '41', 'AMENT_PREFIX_PATH': '/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:708e2645-295c-4b99-833b-3c7f8755ba89', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'IGN_GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GJS_DEBUG_OUTPUT': 'stderr', 'VIRTUAL_ENV': '/home/mac/venv/ros_venv', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/mac/dev_ws/omo_robot/build/omo_r1_description', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'NVM_CD_FLAGS': '', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'QTWEBENGINE_DICTIONARIES_PATH': '/usr/share/hunspell-bdic/', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor:/opt/ros/jazzy/opt/gz_sensors_vendor:/opt/ros/jazzy/opt/gz_physics_vendor:/opt/ros/jazzy/opt/sdformat_vendor:/opt/ros/jazzy/opt/gz_gui_vendor:/opt/ros/jazzy/opt/gz_transport_vendor:/opt/ros/jazzy/opt/gz_rendering_vendor:/opt/ros/jazzy/opt/gz_plugin_vendor:/opt/ros/jazzy/opt/gz_fuel_tools_vendor:/opt/ros/jazzy/opt/gz_msgs_vendor:/opt/ros/jazzy/opt/gz_common_vendor:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_tools_vendor:/opt/ros/jazzy/opt/gz_ogre_next_vendor:/opt/ros/jazzy/opt/gz_dartsim_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor:/opt/ros/jazzy'}), 'shell': False}
[0.058538] (omo_r1_cartographer) JobProgress: {'identifier': 'omo_r1_cartographer', 'progress': 'cmake'}
[0.059606] (omo_r1_cartographer) Command: {'cmd': ['/usr/bin/cmake', '/home/mac/dev_ws/omo_robot/src/omo_r1-ros2/omo_r1_cartographer', '-DCMAKE_INSTALL_PREFIX=/home/mac/dev_ws/omo_robot/install/omo_r1_cartographer'], 'cwd': '/home/mac/dev_ws/omo_robot/build/omo_r1_cartographer', 'env': OrderedDict({'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'XDG_ACTIVATION_TOKEN': 'gnome-shell/Terminator/4143-9-macpc_TIME8255253', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'GZ_SIM_RESOURCE_PATH': '/opt/ros/jazzy/share', 'USER': 'mac', 'GZ_CONFIG_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/share/gz:/opt/ros/jazzy/opt/sdformat_vendor/share/gz:/opt/ros/jazzy/opt/gz_gui_vendor/share/gz:/opt/ros/jazzy/opt/gz_transport_vendor/share/gz:/opt/ros/jazzy/opt/gz_rendering_vendor/share/gz:/opt/ros/jazzy/opt/gz_plugin_vendor/share/gz:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/share/gz:/opt/ros/jazzy/opt/gz_msgs_vendor/share/gz:/opt/ros/jazzy/opt/gz_common_vendor/share/gz', 'XDG_SESSION_TYPE': 'x11', 'CLUTTER_DISABLE_MIPMAPPED_TEXT': '1', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/lib:/opt/ros/jazzy/opt/gz_sensors_vendor/lib:/opt/ros/jazzy/opt/gz_physics_vendor/lib:/opt/ros/jazzy/opt/sdformat_vendor/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_gui_vendor/lib:/opt/ros/jazzy/opt/gz_transport_vendor/lib:/opt/ros/jazzy/opt/gz_rendering_vendor/lib:/opt/ros/jazzy/opt/gz_plugin_vendor/lib:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/lib:/opt/ros/jazzy/opt/gz_msgs_vendor/lib:/opt/ros/jazzy/opt/gz_common_vendor/lib:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_tools_vendor/lib:/opt/ros/jazzy/opt/gz_ogre_next_vendor/lib:/opt/ros/jazzy/opt/gz_dartsim_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/mac', 'OLDPWD': '/home/mac/dev_ws/omo_robot/src', 'DESKTOP_SESSION': 'ubuntu', 'NVM_BIN': '/home/mac/.nvm/versions/node/v22.12.0/bin', 'NVM_INC': '/home/mac/.nvm/versions/node/v22.12.0/include/node', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'PS1': '(ros_venv) \\[\\e[1;34m\\](ID: ${ROS_DOMAIN_ID:-0})\\[\\e[1;32m\\]\\u\\[\\e[0m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0m\\]$', 'MANAGERPID': '3781', 'SYSTEMD_EXEC_PID': '4143', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '74608', 'NVM_DIR': '/home/mac/.nvm', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'mac', 'IGN_GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share', 'JOURNAL_STREAM': '9:35938', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.Shell@x11.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'mac', 'TERM': 'xterm-256color', 'GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share:/home/mac/.gazebo/models:', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'WINDOWPATH': '2', 'PATH': '/home/mac/venv/ros_venv/bin:/opt/ros/jazzy/opt/gz_msgs_vendor/bin:/opt/ros/jazzy/opt/gz_tools_vendor/bin:/opt/ros/jazzy/opt/gz_ogre_next_vendor/bin:/opt/ros/jazzy/bin:/home/mac/.nvm/versions/node/v22.12.0/bin:/home/mac/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/macpc:@/tmp/.ICE-unix/4108,unix/macpc:/tmp/.ICE-unix/4108', 'INVOCATION_ID': '27a0dce060dd479b97afd7feace14a26', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':1', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'VIRTUAL_ENV_PROMPT': '(ros_venv)', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'ROS_DOMAIN_ID': '41', 'AMENT_PREFIX_PATH': '/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:708e2645-295c-4b99-833b-3c7f8755ba89', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'IGN_GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GJS_DEBUG_OUTPUT': 'stderr', 'VIRTUAL_ENV': '/home/mac/venv/ros_venv', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/mac/dev_ws/omo_robot/build/omo_r1_cartographer', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'NVM_CD_FLAGS': '', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'QTWEBENGINE_DICTIONARIES_PATH': '/usr/share/hunspell-bdic/', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor:/opt/ros/jazzy/opt/gz_sensors_vendor:/opt/ros/jazzy/opt/gz_physics_vendor:/opt/ros/jazzy/opt/sdformat_vendor:/opt/ros/jazzy/opt/gz_gui_vendor:/opt/ros/jazzy/opt/gz_transport_vendor:/opt/ros/jazzy/opt/gz_rendering_vendor:/opt/ros/jazzy/opt/gz_plugin_vendor:/opt/ros/jazzy/opt/gz_fuel_tools_vendor:/opt/ros/jazzy/opt/gz_msgs_vendor:/opt/ros/jazzy/opt/gz_common_vendor:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_tools_vendor:/opt/ros/jazzy/opt/gz_ogre_next_vendor:/opt/ros/jazzy/opt/gz_dartsim_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor:/opt/ros/jazzy'}), 'shell': False}
[0.060901] (omo_r1_navigation2) JobProgress: {'identifier': 'omo_r1_navigation2', 'progress': 'cmake'}
[0.061664] (omo_r1_navigation2) Command: {'cmd': ['/usr/bin/cmake', '/home/mac/dev_ws/omo_robot/src/omo_r1-ros2/omo_r1_navigation2', '-DCMAKE_INSTALL_PREFIX=/home/mac/dev_ws/omo_robot/install/omo_r1_navigation2'], 'cwd': '/home/mac/dev_ws/omo_robot/build/omo_r1_navigation2', 'env': OrderedDict({'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'XDG_ACTIVATION_TOKEN': 'gnome-shell/Terminator/4143-9-macpc_TIME8255253', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'GZ_SIM_RESOURCE_PATH': '/opt/ros/jazzy/share', 'USER': 'mac', 'GZ_CONFIG_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/share/gz:/opt/ros/jazzy/opt/sdformat_vendor/share/gz:/opt/ros/jazzy/opt/gz_gui_vendor/share/gz:/opt/ros/jazzy/opt/gz_transport_vendor/share/gz:/opt/ros/jazzy/opt/gz_rendering_vendor/share/gz:/opt/ros/jazzy/opt/gz_plugin_vendor/share/gz:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/share/gz:/opt/ros/jazzy/opt/gz_msgs_vendor/share/gz:/opt/ros/jazzy/opt/gz_common_vendor/share/gz', 'XDG_SESSION_TYPE': 'x11', 'CLUTTER_DISABLE_MIPMAPPED_TEXT': '1', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/lib:/opt/ros/jazzy/opt/gz_sensors_vendor/lib:/opt/ros/jazzy/opt/gz_physics_vendor/lib:/opt/ros/jazzy/opt/sdformat_vendor/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_gui_vendor/lib:/opt/ros/jazzy/opt/gz_transport_vendor/lib:/opt/ros/jazzy/opt/gz_rendering_vendor/lib:/opt/ros/jazzy/opt/gz_plugin_vendor/lib:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/lib:/opt/ros/jazzy/opt/gz_msgs_vendor/lib:/opt/ros/jazzy/opt/gz_common_vendor/lib:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_tools_vendor/lib:/opt/ros/jazzy/opt/gz_ogre_next_vendor/lib:/opt/ros/jazzy/opt/gz_dartsim_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/mac', 'OLDPWD': '/home/mac/dev_ws/omo_robot/src', 'DESKTOP_SESSION': 'ubuntu', 'NVM_BIN': '/home/mac/.nvm/versions/node/v22.12.0/bin', 'NVM_INC': '/home/mac/.nvm/versions/node/v22.12.0/include/node', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'PS1': '(ros_venv) \\[\\e[1;34m\\](ID: ${ROS_DOMAIN_ID:-0})\\[\\e[1;32m\\]\\u\\[\\e[0m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0m\\]$', 'MANAGERPID': '3781', 'SYSTEMD_EXEC_PID': '4143', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '74608', 'NVM_DIR': '/home/mac/.nvm', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'mac', 'IGN_GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share', 'JOURNAL_STREAM': '9:35938', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.Shell@x11.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'mac', 'TERM': 'xterm-256color', 'GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share:/home/mac/.gazebo/models:', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'WINDOWPATH': '2', 'PATH': '/home/mac/venv/ros_venv/bin:/opt/ros/jazzy/opt/gz_msgs_vendor/bin:/opt/ros/jazzy/opt/gz_tools_vendor/bin:/opt/ros/jazzy/opt/gz_ogre_next_vendor/bin:/opt/ros/jazzy/bin:/home/mac/.nvm/versions/node/v22.12.0/bin:/home/mac/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/macpc:@/tmp/.ICE-unix/4108,unix/macpc:/tmp/.ICE-unix/4108', 'INVOCATION_ID': '27a0dce060dd479b97afd7feace14a26', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':1', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'VIRTUAL_ENV_PROMPT': '(ros_venv)', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'ROS_DOMAIN_ID': '41', 'AMENT_PREFIX_PATH': '/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:708e2645-295c-4b99-833b-3c7f8755ba89', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'IGN_GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GJS_DEBUG_OUTPUT': 'stderr', 'VIRTUAL_ENV': '/home/mac/venv/ros_venv', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/mac/dev_ws/omo_robot/build/omo_r1_navigation2', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'NVM_CD_FLAGS': '', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'QTWEBENGINE_DICTIONARIES_PATH': '/usr/share/hunspell-bdic/', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor:/opt/ros/jazzy/opt/gz_sensors_vendor:/opt/ros/jazzy/opt/gz_physics_vendor:/opt/ros/jazzy/opt/sdformat_vendor:/opt/ros/jazzy/opt/gz_gui_vendor:/opt/ros/jazzy/opt/gz_transport_vendor:/opt/ros/jazzy/opt/gz_rendering_vendor:/opt/ros/jazzy/opt/gz_plugin_vendor:/opt/ros/jazzy/opt/gz_fuel_tools_vendor:/opt/ros/jazzy/opt/gz_msgs_vendor:/opt/ros/jazzy/opt/gz_common_vendor:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_tools_vendor:/opt/ros/jazzy/opt/gz_ogre_next_vendor:/opt/ros/jazzy/opt/gz_dartsim_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor:/opt/ros/jazzy'}), 'shell': False}
[0.063182] (omo_r1_gazebo) JobProgress: {'identifier': 'omo_r1_gazebo', 'progress': 'cmake'}
[0.064168] (omo_r1_gazebo) Command: {'cmd': ['/usr/bin/cmake', '/home/mac/dev_ws/omo_robot/src/omo_r1-ros2/omo_r1_gazebo', '-DCMAKE_INSTALL_PREFIX=/home/mac/dev_ws/omo_robot/install/omo_r1_gazebo'], 'cwd': '/home/mac/dev_ws/omo_robot/build/omo_r1_gazebo', 'env': OrderedDict({'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'XDG_ACTIVATION_TOKEN': 'gnome-shell/Terminator/4143-9-macpc_TIME8255253', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'GZ_SIM_RESOURCE_PATH': '/opt/ros/jazzy/share', 'USER': 'mac', 'GZ_CONFIG_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/share/gz:/opt/ros/jazzy/opt/sdformat_vendor/share/gz:/opt/ros/jazzy/opt/gz_gui_vendor/share/gz:/opt/ros/jazzy/opt/gz_transport_vendor/share/gz:/opt/ros/jazzy/opt/gz_rendering_vendor/share/gz:/opt/ros/jazzy/opt/gz_plugin_vendor/share/gz:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/share/gz:/opt/ros/jazzy/opt/gz_msgs_vendor/share/gz:/opt/ros/jazzy/opt/gz_common_vendor/share/gz', 'XDG_SESSION_TYPE': 'x11', 'CLUTTER_DISABLE_MIPMAPPED_TEXT': '1', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/lib:/opt/ros/jazzy/opt/gz_sensors_vendor/lib:/opt/ros/jazzy/opt/gz_physics_vendor/lib:/opt/ros/jazzy/opt/sdformat_vendor/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_gui_vendor/lib:/opt/ros/jazzy/opt/gz_transport_vendor/lib:/opt/ros/jazzy/opt/gz_rendering_vendor/lib:/opt/ros/jazzy/opt/gz_plugin_vendor/lib:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/lib:/opt/ros/jazzy/opt/gz_msgs_vendor/lib:/opt/ros/jazzy/opt/gz_common_vendor/lib:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_tools_vendor/lib:/opt/ros/jazzy/opt/gz_ogre_next_vendor/lib:/opt/ros/jazzy/opt/gz_dartsim_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/mac', 'OLDPWD': '/home/mac/dev_ws/omo_robot/src', 'DESKTOP_SESSION': 'ubuntu', 'NVM_BIN': '/home/mac/.nvm/versions/node/v22.12.0/bin', 'NVM_INC': '/home/mac/.nvm/versions/node/v22.12.0/include/node', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'PS1': '(ros_venv) \\[\\e[1;34m\\](ID: ${ROS_DOMAIN_ID:-0})\\[\\e[1;32m\\]\\u\\[\\e[0m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0m\\]$', 'MANAGERPID': '3781', 'SYSTEMD_EXEC_PID': '4143', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '74608', 'NVM_DIR': '/home/mac/.nvm', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'mac', 'IGN_GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share', 'JOURNAL_STREAM': '9:35938', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.Shell@x11.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'mac', 'TERM': 'xterm-256color', 'GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share:/home/mac/.gazebo/models:', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'WINDOWPATH': '2', 'PATH': '/home/mac/venv/ros_venv/bin:/opt/ros/jazzy/opt/gz_msgs_vendor/bin:/opt/ros/jazzy/opt/gz_tools_vendor/bin:/opt/ros/jazzy/opt/gz_ogre_next_vendor/bin:/opt/ros/jazzy/bin:/home/mac/.nvm/versions/node/v22.12.0/bin:/home/mac/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/macpc:@/tmp/.ICE-unix/4108,unix/macpc:/tmp/.ICE-unix/4108', 'INVOCATION_ID': '27a0dce060dd479b97afd7feace14a26', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':1', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'VIRTUAL_ENV_PROMPT': '(ros_venv)', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'ROS_DOMAIN_ID': '41', 'AMENT_PREFIX_PATH': '/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:708e2645-295c-4b99-833b-3c7f8755ba89', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'IGN_GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GJS_DEBUG_OUTPUT': 'stderr', 'VIRTUAL_ENV': '/home/mac/venv/ros_venv', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/mac/dev_ws/omo_robot/build/omo_r1_gazebo', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'NVM_CD_FLAGS': '', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'QTWEBENGINE_DICTIONARIES_PATH': '/usr/share/hunspell-bdic/', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor:/opt/ros/jazzy/opt/gz_sensors_vendor:/opt/ros/jazzy/opt/gz_physics_vendor:/opt/ros/jazzy/opt/sdformat_vendor:/opt/ros/jazzy/opt/gz_gui_vendor:/opt/ros/jazzy/opt/gz_transport_vendor:/opt/ros/jazzy/opt/gz_rendering_vendor:/opt/ros/jazzy/opt/gz_plugin_vendor:/opt/ros/jazzy/opt/gz_fuel_tools_vendor:/opt/ros/jazzy/opt/gz_msgs_vendor:/opt/ros/jazzy/opt/gz_common_vendor:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_tools_vendor:/opt/ros/jazzy/opt/gz_ogre_next_vendor:/opt/ros/jazzy/opt/gz_dartsim_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor:/opt/ros/jazzy'}), 'shell': False}
[0.065779] (ydlidar_ros2_driver) JobProgress: {'identifier': 'ydlidar_ros2_driver', 'progress': 'cmake'}
[0.066189] (ydlidar_ros2_driver) Command: {'cmd': ['/usr/bin/cmake', '/home/mac/dev_ws/omo_robot/src/ydlidar_ros2_driver', '-DCMAKE_INSTALL_PREFIX=/home/mac/dev_ws/omo_robot/install/ydlidar_ros2_driver'], 'cwd': '/home/mac/dev_ws/omo_robot/build/ydlidar_ros2_driver', 'env': OrderedDict({'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'XDG_ACTIVATION_TOKEN': 'gnome-shell/Terminator/4143-9-macpc_TIME8255253', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'GZ_SIM_RESOURCE_PATH': '/opt/ros/jazzy/share', 'USER': 'mac', 'GZ_CONFIG_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/share/gz:/opt/ros/jazzy/opt/sdformat_vendor/share/gz:/opt/ros/jazzy/opt/gz_gui_vendor/share/gz:/opt/ros/jazzy/opt/gz_transport_vendor/share/gz:/opt/ros/jazzy/opt/gz_rendering_vendor/share/gz:/opt/ros/jazzy/opt/gz_plugin_vendor/share/gz:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/share/gz:/opt/ros/jazzy/opt/gz_msgs_vendor/share/gz:/opt/ros/jazzy/opt/gz_common_vendor/share/gz', 'XDG_SESSION_TYPE': 'x11', 'CLUTTER_DISABLE_MIPMAPPED_TEXT': '1', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/lib:/opt/ros/jazzy/opt/gz_sensors_vendor/lib:/opt/ros/jazzy/opt/gz_physics_vendor/lib:/opt/ros/jazzy/opt/sdformat_vendor/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_gui_vendor/lib:/opt/ros/jazzy/opt/gz_transport_vendor/lib:/opt/ros/jazzy/opt/gz_rendering_vendor/lib:/opt/ros/jazzy/opt/gz_plugin_vendor/lib:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/lib:/opt/ros/jazzy/opt/gz_msgs_vendor/lib:/opt/ros/jazzy/opt/gz_common_vendor/lib:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_tools_vendor/lib:/opt/ros/jazzy/opt/gz_ogre_next_vendor/lib:/opt/ros/jazzy/opt/gz_dartsim_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/mac', 'OLDPWD': '/home/mac/dev_ws/omo_robot/src', 'DESKTOP_SESSION': 'ubuntu', 'NVM_BIN': '/home/mac/.nvm/versions/node/v22.12.0/bin', 'NVM_INC': '/home/mac/.nvm/versions/node/v22.12.0/include/node', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'PS1': '(ros_venv) \\[\\e[1;34m\\](ID: ${ROS_DOMAIN_ID:-0})\\[\\e[1;32m\\]\\u\\[\\e[0m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0m\\]$', 'MANAGERPID': '3781', 'SYSTEMD_EXEC_PID': '4143', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '74608', 'NVM_DIR': '/home/mac/.nvm', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'mac', 'IGN_GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share', 'JOURNAL_STREAM': '9:35938', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.Shell@x11.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'mac', 'TERM': 'xterm-256color', 'GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share:/home/mac/.gazebo/models:', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'WINDOWPATH': '2', 'PATH': '/home/mac/venv/ros_venv/bin:/opt/ros/jazzy/opt/gz_msgs_vendor/bin:/opt/ros/jazzy/opt/gz_tools_vendor/bin:/opt/ros/jazzy/opt/gz_ogre_next_vendor/bin:/opt/ros/jazzy/bin:/home/mac/.nvm/versions/node/v22.12.0/bin:/home/mac/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/macpc:@/tmp/.ICE-unix/4108,unix/macpc:/tmp/.ICE-unix/4108', 'INVOCATION_ID': '27a0dce060dd479b97afd7feace14a26', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':1', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'VIRTUAL_ENV_PROMPT': '(ros_venv)', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'ROS_DOMAIN_ID': '41', 'AMENT_PREFIX_PATH': '/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:708e2645-295c-4b99-833b-3c7f8755ba89', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'IGN_GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GJS_DEBUG_OUTPUT': 'stderr', 'VIRTUAL_ENV': '/home/mac/venv/ros_venv', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/mac/dev_ws/omo_robot/build/ydlidar_ros2_driver', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'NVM_CD_FLAGS': '', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'QTWEBENGINE_DICTIONARIES_PATH': '/usr/share/hunspell-bdic/', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor:/opt/ros/jazzy/opt/gz_sensors_vendor:/opt/ros/jazzy/opt/gz_physics_vendor:/opt/ros/jazzy/opt/sdformat_vendor:/opt/ros/jazzy/opt/gz_gui_vendor:/opt/ros/jazzy/opt/gz_transport_vendor:/opt/ros/jazzy/opt/gz_rendering_vendor:/opt/ros/jazzy/opt/gz_plugin_vendor:/opt/ros/jazzy/opt/gz_fuel_tools_vendor:/opt/ros/jazzy/opt/gz_msgs_vendor:/opt/ros/jazzy/opt/gz_common_vendor:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_tools_vendor:/opt/ros/jazzy/opt/gz_ogre_next_vendor:/opt/ros/jazzy/opt/gz_dartsim_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor:/opt/ros/jazzy'}), 'shell': False}
[0.072920] (ydlidar_sdk) JobProgress: {'identifier': 'ydlidar_sdk', 'progress': 'cmake'}
[0.073432] (ydlidar_sdk) Command: {'cmd': ['/usr/bin/cmake', '/home/mac/dev_ws/omo_robot/src/YDLidar-SDK', '-DCMAKE_INSTALL_PREFIX=/home/mac/dev_ws/omo_robot/install/ydlidar_sdk'], 'cwd': '/home/mac/dev_ws/omo_robot/build/ydlidar_sdk', 'env': OrderedDict({'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'XDG_ACTIVATION_TOKEN': 'gnome-shell/Terminator/4143-9-macpc_TIME8255253', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'GZ_SIM_RESOURCE_PATH': '/opt/ros/jazzy/share', 'USER': 'mac', 'GZ_CONFIG_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/share/gz:/opt/ros/jazzy/opt/sdformat_vendor/share/gz:/opt/ros/jazzy/opt/gz_gui_vendor/share/gz:/opt/ros/jazzy/opt/gz_transport_vendor/share/gz:/opt/ros/jazzy/opt/gz_rendering_vendor/share/gz:/opt/ros/jazzy/opt/gz_plugin_vendor/share/gz:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/share/gz:/opt/ros/jazzy/opt/gz_msgs_vendor/share/gz:/opt/ros/jazzy/opt/gz_common_vendor/share/gz', 'XDG_SESSION_TYPE': 'x11', 'CLUTTER_DISABLE_MIPMAPPED_TEXT': '1', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/lib:/opt/ros/jazzy/opt/gz_sensors_vendor/lib:/opt/ros/jazzy/opt/gz_physics_vendor/lib:/opt/ros/jazzy/opt/sdformat_vendor/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_gui_vendor/lib:/opt/ros/jazzy/opt/gz_transport_vendor/lib:/opt/ros/jazzy/opt/gz_rendering_vendor/lib:/opt/ros/jazzy/opt/gz_plugin_vendor/lib:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/lib:/opt/ros/jazzy/opt/gz_msgs_vendor/lib:/opt/ros/jazzy/opt/gz_common_vendor/lib:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_tools_vendor/lib:/opt/ros/jazzy/opt/gz_ogre_next_vendor/lib:/opt/ros/jazzy/opt/gz_dartsim_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/mac', 'OLDPWD': '/home/mac/dev_ws/omo_robot/src', 'DESKTOP_SESSION': 'ubuntu', 'NVM_BIN': '/home/mac/.nvm/versions/node/v22.12.0/bin', 'NVM_INC': '/home/mac/.nvm/versions/node/v22.12.0/include/node', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'PS1': '(ros_venv) \\[\\e[1;34m\\](ID: ${ROS_DOMAIN_ID:-0})\\[\\e[1;32m\\]\\u\\[\\e[0m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0m\\]$', 'MANAGERPID': '3781', 'SYSTEMD_EXEC_PID': '4143', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '74608', 'NVM_DIR': '/home/mac/.nvm', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'mac', 'IGN_GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share', 'JOURNAL_STREAM': '9:35938', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.Shell@x11.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'mac', 'TERM': 'xterm-256color', 'GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share:/home/mac/.gazebo/models:', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'WINDOWPATH': '2', 'PATH': '/home/mac/venv/ros_venv/bin:/opt/ros/jazzy/opt/gz_msgs_vendor/bin:/opt/ros/jazzy/opt/gz_tools_vendor/bin:/opt/ros/jazzy/opt/gz_ogre_next_vendor/bin:/opt/ros/jazzy/bin:/home/mac/.nvm/versions/node/v22.12.0/bin:/home/mac/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/macpc:@/tmp/.ICE-unix/4108,unix/macpc:/tmp/.ICE-unix/4108', 'INVOCATION_ID': '27a0dce060dd479b97afd7feace14a26', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':1', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'VIRTUAL_ENV_PROMPT': '(ros_venv)', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'ROS_DOMAIN_ID': '41', 'AMENT_PREFIX_PATH': '/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:708e2645-295c-4b99-833b-3c7f8755ba89', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'IGN_GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GJS_DEBUG_OUTPUT': 'stderr', 'VIRTUAL_ENV': '/home/mac/venv/ros_venv', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/mac/dev_ws/omo_robot/build/ydlidar_sdk', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'NVM_CD_FLAGS': '', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'QTWEBENGINE_DICTIONARIES_PATH': '/usr/share/hunspell-bdic/', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor:/opt/ros/jazzy/opt/gz_sensors_vendor:/opt/ros/jazzy/opt/gz_physics_vendor:/opt/ros/jazzy/opt/sdformat_vendor:/opt/ros/jazzy/opt/gz_gui_vendor:/opt/ros/jazzy/opt/gz_transport_vendor:/opt/ros/jazzy/opt/gz_rendering_vendor:/opt/ros/jazzy/opt/gz_plugin_vendor:/opt/ros/jazzy/opt/gz_fuel_tools_vendor:/opt/ros/jazzy/opt/gz_msgs_vendor:/opt/ros/jazzy/opt/gz_common_vendor:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_tools_vendor:/opt/ros/jazzy/opt/gz_ogre_next_vendor:/opt/ros/jazzy/opt/gz_dartsim_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor'}), 'shell': False}
[0.089485] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0mCMake Deprecation Warning at CMakeLists.txt:1 (cmake_minimum_required):\n'}
[0.089968] (ydlidar_sdk) StderrLine: {'line': b'  Compatibility with CMake < 3.5 will be removed from a future version of\n'}
[0.090097] (ydlidar_sdk) StderrLine: {'line': b'  CMake.\n'}
[0.090200] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.090297] (ydlidar_sdk) StderrLine: {'line': b'  Update the VERSION argument <min> value or use a ...<max> suffix to tell\n'}
[0.090394] (ydlidar_sdk) StderrLine: {'line': b'  CMake that the project does not need compatibility with older versions.\n'}
[0.090486] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.090577] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0m\n'}
[0.099317] (-) TimerEvent: {}
[0.157343] (omo_r1_interfaces) StdoutLine: {'line': b'-- The C compiler identification is GNU 13.3.0\n'}
[0.157917] (omo_r1_description) StdoutLine: {'line': b'-- The C compiler identification is GNU 13.3.0\n'}
[0.158253] (omo_r1_cartographer) StdoutLine: {'line': b'-- The C compiler identification is GNU 13.3.0\n'}
[0.158739] (omo_r1_navigation2) StdoutLine: {'line': b'-- The C compiler identification is GNU 13.3.0\n'}
[0.159369] (omo_r1_gazebo) StdoutLine: {'line': b'-- The C compiler identification is GNU 13.3.0\n'}
[0.162044] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- The C compiler identification is GNU 13.3.0\n'}
[0.182460] (ydlidar_sdk) StdoutLine: {'line': b'-- The C compiler identification is GNU 13.3.0\n'}
[0.199516] (-) TimerEvent: {}
[0.254647] (omo_r1_interfaces) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 13.3.0\n'}
[0.255163] (omo_r1_description) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 13.3.0\n'}
[0.255327] (omo_r1_navigation2) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 13.3.0\n'}
[0.255465] (omo_r1_cartographer) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 13.3.0\n'}
[0.255589] (omo_r1_gazebo) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 13.3.0\n'}
[0.258796] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 13.3.0\n'}
[0.282040] (omo_r1_navigation2) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.282470] (omo_r1_interfaces) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.282759] (omo_r1_gazebo) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.282957] (omo_r1_description) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.283113] (omo_r1_cartographer) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.286902] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.294275] (ydlidar_sdk) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 13.3.0\n'}
[0.299632] (-) TimerEvent: {}
[0.328782] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.399778] (-) TimerEvent: {}
[0.453685] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.454251] (omo_r1_gazebo) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.454556] (omo_r1_cartographer) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.454726] (omo_r1_interfaces) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.454827] (omo_r1_navigation2) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.455028] (omo_r1_description) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.466361] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[0.466687] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.467274] (omo_r1_gazebo) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[0.467502] (omo_r1_cartographer) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[0.467697] (omo_r1_gazebo) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.467896] (omo_r1_description) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[0.468274] (omo_r1_interfaces) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[0.468484] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.468656] (omo_r1_description) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.468776] (omo_r1_interfaces) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.468900] (omo_r1_cartographer) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.469031] (omo_r1_gazebo) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.469144] (omo_r1_cartographer) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.469325] (omo_r1_navigation2) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[0.469520] (omo_r1_navigation2) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.469732] (omo_r1_description) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.469927] (omo_r1_interfaces) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.470098] (omo_r1_navigation2) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.483033] (omo_r1_cartographer) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.483564] (omo_r1_description) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.483771] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.484236] (omo_r1_gazebo) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.484403] (omo_r1_interfaces) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.485490] (omo_r1_navigation2) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.499944] (-) TimerEvent: {}
[0.507919] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.521981] (ydlidar_sdk) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[0.522461] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.523033] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.541797] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.600091] (-) TimerEvent: {}
[0.671498] (omo_r1_interfaces) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.672088] (omo_r1_cartographer) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.672328] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.672466] (omo_r1_description) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.672600] (omo_r1_navigation2) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.673093] (omo_r1_gazebo) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.684583] (omo_r1_interfaces) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[0.685034] (omo_r1_description) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[0.685256] (omo_r1_interfaces) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.685351] (omo_r1_cartographer) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[0.685511] (omo_r1_description) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.685681] (omo_r1_cartographer) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.685827] (omo_r1_interfaces) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.686090] (omo_r1_navigation2) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[0.686379] (omo_r1_cartographer) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.686564] (omo_r1_navigation2) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.686759] (omo_r1_description) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.687278] (omo_r1_navigation2) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.689881] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[0.690320] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.690693] (omo_r1_gazebo) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[0.691061] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.691278] (omo_r1_gazebo) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.691986] (omo_r1_gazebo) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.694969] (omo_r1_interfaces) StdoutLine: {'line': b'-- Found ament_cmake: 2.5.4 (/opt/ros/jazzy/share/ament_cmake/cmake)\n'}
[0.695213] (omo_r1_cartographer) StdoutLine: {'line': b'-- Found ament_cmake: 2.5.4 (/opt/ros/jazzy/share/ament_cmake/cmake)\n'}
[0.695788] (omo_r1_description) StdoutLine: {'line': b'-- Found ament_cmake: 2.5.4 (/opt/ros/jazzy/share/ament_cmake/cmake)\n'}
[0.696075] (omo_r1_navigation2) StdoutLine: {'line': b'-- Found ament_cmake: 2.5.4 (/opt/ros/jazzy/share/ament_cmake/cmake)\n'}
[0.699870] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found ament_cmake: 2.5.4 (/opt/ros/jazzy/share/ament_cmake/cmake)\n'}
[0.700152] (-) TimerEvent: {}
[0.700727] (omo_r1_gazebo) StdoutLine: {'line': b'-- Found ament_cmake: 2.5.4 (/opt/ros/jazzy/share/ament_cmake/cmake)\n'}
[0.742692] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.757915] (ydlidar_sdk) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[0.758437] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.759338] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.760775] (ydlidar_sdk) StdoutLine: {'line': b'-- Current platform: Linux\n'}
[0.762071] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0mCMake Deprecation Warning at CMakeLists.txt:58 (cmake_policy):\n'}
[0.762324] (ydlidar_sdk) StderrLine: {'line': b'  The OLD behavior for policy CMP0053 will be removed from a future version\n'}
[0.762459] (ydlidar_sdk) StderrLine: {'line': b'  of CMake.\n'}
[0.762576] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.762712] (ydlidar_sdk) StderrLine: {'line': b'  The cmake-policies(7) manual explains that the OLD behaviors of all\n'}
[0.762819] (ydlidar_sdk) StderrLine: {'line': b'  policies are deprecated and that a policy should be set to OLD only under\n'}
[0.762922] (ydlidar_sdk) StderrLine: {'line': b'  specific short-term circumstances.  Projects should be ported to the NEW\n'}
[0.763035] (ydlidar_sdk) StderrLine: {'line': b'  behavior and not rely on setting a policy to OLD.\n'}
[0.763144] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.763250] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0m\n'}
[0.763354] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0mCMake Deprecation Warning at CMakeLists.txt:61 (cmake_policy):\n'}
[0.763454] (ydlidar_sdk) StderrLine: {'line': b'  The OLD behavior for policy CMP0037 will be removed from a future version\n'}
[0.763563] (ydlidar_sdk) StderrLine: {'line': b'  of CMake.\n'}
[0.763693] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.763838] (ydlidar_sdk) StderrLine: {'line': b'  The cmake-policies(7) manual explains that the OLD behaviors of all\n'}
[0.763959] (ydlidar_sdk) StderrLine: {'line': b'  policies are deprecated and that a policy should be set to OLD only under\n'}
[0.764061] (ydlidar_sdk) StderrLine: {'line': b'  specific short-term circumstances.  Projects should be ported to the NEW\n'}
[0.764156] (ydlidar_sdk) StderrLine: {'line': b'  behavior and not rely on setting a policy to OLD.\n'}
[0.764252] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.764361] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0m\n'}
[0.764472] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0mCMake Deprecation Warning at CMakeLists.txt:64 (cmake_policy):\n'}
[0.764581] (ydlidar_sdk) StderrLine: {'line': b'  The OLD behavior for policy CMP0043 will be removed from a future version\n'}
[0.764712] (ydlidar_sdk) StderrLine: {'line': b'  of CMake.\n'}
[0.764828] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.764936] (ydlidar_sdk) StderrLine: {'line': b'  The cmake-policies(7) manual explains that the OLD behaviors of all\n'}
[0.765045] (ydlidar_sdk) StderrLine: {'line': b'  policies are deprecated and that a policy should be set to OLD only under\n'}
[0.765141] (ydlidar_sdk) StderrLine: {'line': b'  specific short-term circumstances.  Projects should be ported to the NEW\n'}
[0.765238] (ydlidar_sdk) StderrLine: {'line': b'  behavior and not rely on setting a policy to OLD.\n'}
[0.765339] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.765454] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0m\n'}
[0.765972] (ydlidar_sdk) StdoutLine: {'line': b'-- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) \n'}
[0.766291] (ydlidar_sdk) StderrLine: {'line': b'\x1b[33mCMake Warning (dev) at CMakeLists.txt:78 (find_package):\n'}
[0.766468] (ydlidar_sdk) StderrLine: {'line': b'  Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules\n'}
[0.766627] (ydlidar_sdk) StderrLine: {'line': b'  are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use\n'}
[0.766931] (ydlidar_sdk) StderrLine: {'line': b'  the cmake_policy command to set the policy and suppress this warning.\n'}
[0.767157] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.767247] (ydlidar_sdk) StderrLine: {'line': b'This warning is for project developers.  Use -Wno-dev to suppress it.\n'}
[0.767320] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0m\n'}
[0.793828] (ydlidar_sdk) StdoutLine: {'line': b'-- Found PythonInterp: /home/mac/venv/ros_venv/bin/python (found version "3.12.3") \n'}
[0.794396] (ydlidar_sdk) StderrLine: {'line': b'\x1b[33mCMake Warning (dev) at CMakeLists.txt:79 (find_package):\n'}
[0.794545] (ydlidar_sdk) StderrLine: {'line': b'  Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules\n'}
[0.794664] (ydlidar_sdk) StderrLine: {'line': b'  are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use\n'}
[0.794775] (ydlidar_sdk) StderrLine: {'line': b'  the cmake_policy command to set the policy and suppress this warning.\n'}
[0.794876] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.794969] (ydlidar_sdk) StderrLine: {'line': b'This warning is for project developers.  Use -Wno-dev to suppress it.\n'}
[0.795062] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0m\n'}
[0.800301] (-) TimerEvent: {}
[0.823246] (ydlidar_sdk) StdoutLine: {'line': b'-- Found PythonLibs: /usr/lib/x86_64-linux-gnu/libpython3.12.so (found version "3.12.3") \n'}
[0.900501] (-) TimerEvent: {}
[0.902157] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found Python3: /home/mac/venv/ros_venv/bin/python3 (found version "3.12.3") found components: Interpreter \n'}
[0.902924] (omo_r1_description) StdoutLine: {'line': b'-- Found Python3: /home/mac/venv/ros_venv/bin/python3 (found version "3.12.3") found components: Interpreter \n'}
[0.903723] (omo_r1_interfaces) StdoutLine: {'line': b'-- Found Python3: /home/mac/venv/ros_venv/bin/python3 (found version "3.12.3") found components: Interpreter \n'}
[0.904661] (omo_r1_navigation2) StdoutLine: {'line': b'-- Found Python3: /home/mac/venv/ros_venv/bin/python3 (found version "3.12.3") found components: Interpreter \n'}
[0.907346] (omo_r1_cartographer) StdoutLine: {'line': b'-- Found Python3: /home/mac/venv/ros_venv/bin/python3 (found version "3.12.3") found components: Interpreter \n'}
[0.909137] (omo_r1_gazebo) StdoutLine: {'line': b'-- Found Python3: /home/mac/venv/ros_venv/bin/python3 (found version "3.12.3") found components: Interpreter \n'}
[1.000653] (-) TimerEvent: {}
[1.014837] (ydlidar_sdk) StdoutLine: {'line': b'-- Found GTest: /usr/lib/x86_64-linux-gnu/cmake/GTest/GTestConfig.cmake (found version "1.14.0")  \n'}
[1.015885] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0mCMake Deprecation Warning at core/CMakeLists.txt:1 (cmake_minimum_required):\n'}
[1.016041] (ydlidar_sdk) StderrLine: {'line': b'  Compatibility with CMake < 3.5 will be removed from a future version of\n'}
[1.016128] (ydlidar_sdk) StderrLine: {'line': b'  CMake.\n'}
[1.016206] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[1.016282] (ydlidar_sdk) StderrLine: {'line': b'  Update the VERSION argument <min> value or use a ...<max> suffix to tell\n'}
[1.016357] (ydlidar_sdk) StderrLine: {'line': b'  CMake that the project does not need compatibility with older versions.\n'}
[1.016433] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[1.016505] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0m\n'}
[1.024906] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0mCMake Deprecation Warning at examples/CMakeLists.txt:2 (cmake_minimum_required):\n'}
[1.025284] (ydlidar_sdk) StderrLine: {'line': b'  Compatibility with CMake < 3.5 will be removed from a future version of\n'}
[1.025380] (ydlidar_sdk) StderrLine: {'line': b'  CMake.\n'}
[1.025463] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[1.025542] (ydlidar_sdk) StderrLine: {'line': b'  Update the VERSION argument <min> value or use a ...<max> suffix to tell\n'}
[1.025637] (ydlidar_sdk) StderrLine: {'line': b'  CMake that the project does not need compatibility with older versions.\n'}
[1.025758] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[1.025836] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0m\n'}
[1.029549] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0mCMake Deprecation Warning at cmake/install_package.cmake:101 (cmake_policy):\n'}
[1.029894] (ydlidar_sdk) StderrLine: {'line': b'  The OLD behavior for policy CMP0026 will be removed from a future version\n'}
[1.029980] (ydlidar_sdk) StderrLine: {'line': b'  of CMake.\n'}
[1.030056] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[1.030131] (ydlidar_sdk) StderrLine: {'line': b'  The cmake-policies(7) manual explains that the OLD behaviors of all\n'}
[1.030206] (ydlidar_sdk) StderrLine: {'line': b'  policies are deprecated and that a policy should be set to OLD only under\n'}
[1.030299] (ydlidar_sdk) StderrLine: {'line': b'  specific short-term circumstances.  Projects should be ported to the NEW\n'}
[1.030373] (ydlidar_sdk) StderrLine: {'line': b'  behavior and not rely on setting a policy to OLD.\n'}
[1.030447] (ydlidar_sdk) StderrLine: {'line': b'Call Stack (most recent call first):\n'}
[1.030525] (ydlidar_sdk) StderrLine: {'line': b'  CMakeLists.txt:176 (install_package)\n'}
[1.030599] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[1.030693] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0m\n'}
[1.033212] (ydlidar_sdk) StderrLine: {'line': b'\x1b[33mCMake Warning (dev) at cmake/install_package.cmake:191 (install):\n'}
[1.033487] (ydlidar_sdk) StderrLine: {'line': b'  Policy CMP0062 is not set: Disallow install() of export() result.  Run\n'}
[1.033582] (ydlidar_sdk) StderrLine: {'line': b'  "cmake --help-policy CMP0062" for policy details.  Use the cmake_policy\n'}
[1.033685] (ydlidar_sdk) StderrLine: {'line': b'  command to set the policy and suppress this warning.\n'}
[1.033960] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[1.034121] (ydlidar_sdk) StderrLine: {'line': b'  The file\n'}
[1.034235] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[1.034335] (ydlidar_sdk) StderrLine: {'line': b'    /home/mac/dev_ws/omo_robot/build/ydlidar_sdk/ydlidar_sdkTargets.cmake\n'}
[1.034438] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[1.034541] (ydlidar_sdk) StderrLine: {'line': b'  was generated by the export() command.  It should not be installed with the\n'}
[1.034665] (ydlidar_sdk) StderrLine: {'line': b'  install() command.  Use the install(EXPORT) mechanism instead.  See the\n'}
[1.034758] (ydlidar_sdk) StderrLine: {'line': b'  cmake-packages(7) manual for more.\n'}
[1.034813] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[1.034867] (ydlidar_sdk) StderrLine: {'line': b'Call Stack (most recent call first):\n'}
[1.034937] (ydlidar_sdk) StderrLine: {'line': b'  CMakeLists.txt:176 (install_package)\n'}
[1.034991] (ydlidar_sdk) StderrLine: {'line': b'This warning is for project developers.  Use -Wno-dev to suppress it.\n'}
[1.035046] (ydlidar_sdk) StderrLine: {'line': b'\x1b[0m\n'}
[1.044768] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[1.045122] (ydlidar_sdk) StdoutLine: {'line': b'-- +===========================================================================+\n'}
[1.045272] (ydlidar_sdk) StdoutLine: {'line': b'-- |         Resulting configuration for                             |\n'}
[1.045393] (ydlidar_sdk) StdoutLine: {'line': b'-- +===========================================================================+\n'}
[1.045508] (ydlidar_sdk) StdoutLine: {'line': b'--  _________________________ PLATFORM _____________________________\n'}
[1.045586] (ydlidar_sdk) StdoutLine: {'line': b'--  Host                        : Linux6.14.0-29-genericx86_64\n'}
[1.045882] (ydlidar_sdk) StdoutLine: {'line': b'--  Is the system big endian?   :  No \n'}
[1.045986] (ydlidar_sdk) StdoutLine: {'line': b'--  Word size (32/64 bit)       : 64\n'}
[1.046061] (ydlidar_sdk) StdoutLine: {'line': b'--  CMake version               : 3.28.3\n'}
[1.046124] (ydlidar_sdk) StdoutLine: {'line': b'--  CMake generator             : Unix Makefiles\n'}
[1.046185] (ydlidar_sdk) StdoutLine: {'line': b'--  CMake build tool            : /usr/bin/gmake\n'}
[1.046244] (ydlidar_sdk) StdoutLine: {'line': b'--  Compiler                    : GNU\n'}
[1.046318] (ydlidar_sdk) StdoutLine: {'line': b'--  Configuration               : \n'}
[1.046381] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[1.046442] (ydlidar_sdk) StdoutLine: {'line': b'--  __________________________ OPTIONS _____________________________\n'}
[1.046507] (ydlidar_sdk) StdoutLine: {'line': b'--  Build YDLidar-SDK as a shared library?\xe3\x80\x80\xe3\x80\x80 :  No \n'}
[1.046574] (ydlidar_sdk) StdoutLine: {'line': b'--  Build Examples?\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80 : Yes \n'}
[1.046663] (ydlidar_sdk) StdoutLine: {'line': b'--  Build C Sharp API?\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80 :  No \n'}
[1.046735] (ydlidar_sdk) StdoutLine: {'line': b'--  Build TEST?  \t\t\t\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80 :  No \n'}
[1.046808] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[1.046877] (ydlidar_sdk) StdoutLine: {'line': b'--  _________________________ INSTALL _____________________\n'}
[1.046942] (ydlidar_sdk) StdoutLine: {'line': b'--  Install prefix                    : /home/mac/dev_ws/omo_robot/install/ydlidar_sdk\n'}
[1.047006] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[1.047070] (ydlidar_sdk) StdoutLine: {'line': b'--  _______________________ WRAPPERS/BINDINGS ______________________\n'}
[1.047131] (ydlidar_sdk) StdoutLine: {'line': b'--  Python bindings (pyydlidar)   :  No \n'}
[1.047191] (ydlidar_sdk) StdoutLine: {'line': b'--   - dep: Swig found?       :  No [Version: ]\n'}
[1.047250] (ydlidar_sdk) StdoutLine: {'line': b'--   - dep: PythonLibs found?  : Yes [Version: 3.12.3]\n'}
[1.047316] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[1.047433] (ydlidar_sdk) StdoutLine: {'line': b'-- Configuring done (1.0s)\n'}
[1.088809] (ydlidar_sdk) StdoutLine: {'line': b'-- Generating done (0.0s)\n'}
[1.100715] (-) TimerEvent: {}
[1.101106] (ydlidar_sdk) StdoutLine: {'line': b'-- Build files have been written to: /home/mac/dev_ws/omo_robot/build/ydlidar_sdk\n'}
[1.122334] (ydlidar_sdk) CommandEnded: {'returncode': 0}
[1.123338] (ydlidar_sdk) JobProgress: {'identifier': 'ydlidar_sdk', 'progress': 'build'}
[1.124423] (ydlidar_sdk) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/mac/dev_ws/omo_robot/build/ydlidar_sdk', '--', '-j16', '-l16'], 'cwd': '/home/mac/dev_ws/omo_robot/build/ydlidar_sdk', 'env': OrderedDict({'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'XDG_ACTIVATION_TOKEN': 'gnome-shell/Terminator/4143-9-macpc_TIME8255253', 'LESSOPEN': '| /usr/bin/lesspipe %s', 'GZ_SIM_RESOURCE_PATH': '/opt/ros/jazzy/share', 'USER': 'mac', 'GZ_CONFIG_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/share/gz:/opt/ros/jazzy/opt/sdformat_vendor/share/gz:/opt/ros/jazzy/opt/gz_gui_vendor/share/gz:/opt/ros/jazzy/opt/gz_transport_vendor/share/gz:/opt/ros/jazzy/opt/gz_rendering_vendor/share/gz:/opt/ros/jazzy/opt/gz_plugin_vendor/share/gz:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/share/gz:/opt/ros/jazzy/opt/gz_msgs_vendor/share/gz:/opt/ros/jazzy/opt/gz_common_vendor/share/gz', 'XDG_SESSION_TYPE': 'x11', 'CLUTTER_DISABLE_MIPMAPPED_TEXT': '1', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor/lib:/opt/ros/jazzy/opt/gz_sensors_vendor/lib:/opt/ros/jazzy/opt/gz_physics_vendor/lib:/opt/ros/jazzy/opt/sdformat_vendor/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_gui_vendor/lib:/opt/ros/jazzy/opt/gz_transport_vendor/lib:/opt/ros/jazzy/opt/gz_rendering_vendor/lib:/opt/ros/jazzy/opt/gz_plugin_vendor/lib:/opt/ros/jazzy/opt/gz_fuel_tools_vendor/lib:/opt/ros/jazzy/opt/gz_msgs_vendor/lib:/opt/ros/jazzy/opt/gz_common_vendor/lib:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_tools_vendor/lib:/opt/ros/jazzy/opt/gz_ogre_next_vendor/lib:/opt/ros/jazzy/opt/gz_dartsim_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/mac', 'OLDPWD': '/home/mac/dev_ws/omo_robot/src', 'DESKTOP_SESSION': 'ubuntu', 'NVM_BIN': '/home/mac/.nvm/versions/node/v22.12.0/bin', 'NVM_INC': '/home/mac/.nvm/versions/node/v22.12.0/include/node', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/terminator.desktop', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'PS1': '(ros_venv) \\[\\e[1;34m\\](ID: ${ROS_DOMAIN_ID:-0})\\[\\e[1;32m\\]\\u\\[\\e[0m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0m\\]$', 'MANAGERPID': '3781', 'SYSTEMD_EXEC_PID': '4143', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'TERMINATOR_DBUS_NAME': 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '74608', 'NVM_DIR': '/home/mac/.nvm', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'mac', 'IGN_GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share', 'JOURNAL_STREAM': '9:35938', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.Shell@x11.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'mac', 'TERM': 'xterm-256color', 'GAZEBO_MODEL_PATH': '/opt/ros/jazzy/share:/home/mac/.gazebo/models:', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'WINDOWPATH': '2', 'PATH': '/home/mac/venv/ros_venv/bin:/opt/ros/jazzy/opt/gz_msgs_vendor/bin:/opt/ros/jazzy/opt/gz_tools_vendor/bin:/opt/ros/jazzy/opt/gz_ogre_next_vendor/bin:/opt/ros/jazzy/bin:/home/mac/.nvm/versions/node/v22.12.0/bin:/home/mac/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/macpc:@/tmp/.ICE-unix/4108,unix/macpc:/tmp/.ICE-unix/4108', 'INVOCATION_ID': '27a0dce060dd479b97afd7feace14a26', 'XDG_MENU_PREFIX': 'gnome-', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':1', 'TERMINATOR_DBUS_PATH': '/net/tenshu/Terminator2', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'VIRTUAL_ENV_PROMPT': '(ros_venv)', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'ROS_DOMAIN_ID': '41', 'AMENT_PREFIX_PATH': '/opt/ros/jazzy', 'SHELL': '/bin/bash', 'TERMINATOR_UUID': 'urn:uuid:708e2645-295c-4b99-833b-3c7f8755ba89', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'IGN_GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GPG_AGENT_INFO': '/run/user/1000/gnupg/S.gpg-agent:0:1', 'GAZEBO_RESOURCE_PATH': '/opt/ros/jazzy/share', 'GJS_DEBUG_OUTPUT': 'stderr', 'VIRTUAL_ENV': '/home/mac/venv/ros_venv', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/mac/dev_ws/omo_robot/build/ydlidar_sdk', 'LC_ALL': 'en_US.UTF-8', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'NVM_CD_FLAGS': '', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'QTWEBENGINE_DICTIONARIES_PATH': '/usr/share/hunspell-bdic/', 'PYTHONPATH': '/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/opt/ros/jazzy/opt/gz_sim_vendor:/opt/ros/jazzy/opt/gz_sensors_vendor:/opt/ros/jazzy/opt/gz_physics_vendor:/opt/ros/jazzy/opt/sdformat_vendor:/opt/ros/jazzy/opt/gz_gui_vendor:/opt/ros/jazzy/opt/gz_transport_vendor:/opt/ros/jazzy/opt/gz_rendering_vendor:/opt/ros/jazzy/opt/gz_plugin_vendor:/opt/ros/jazzy/opt/gz_fuel_tools_vendor:/opt/ros/jazzy/opt/gz_msgs_vendor:/opt/ros/jazzy/opt/gz_common_vendor:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_tools_vendor:/opt/ros/jazzy/opt/gz_ogre_next_vendor:/opt/ros/jazzy/opt/gz_dartsim_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor'}), 'shell': False}
[1.131597] (omo_r1_description) StdoutLine: {'line': b'-- Found urdf: 2.10.0 (/opt/ros/jazzy/share/urdf/cmake)\n'}
[1.135214] (omo_r1_interfaces) StdoutLine: {'line': b'-- Found rosidl_default_generators: 1.6.0 (/opt/ros/jazzy/share/rosidl_default_generators/cmake)\n'}
[1.142554] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found rclcpp: 28.1.12 (/opt/ros/jazzy/share/rclcpp/cmake)\n'}
[1.147957] (omo_r1_interfaces) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[1.151547] (omo_r1_gazebo) StderrLine: {'line': b'\x1b[31mCMake Error at CMakeLists.txt:23 (find_package):\n'}
[1.151837] (omo_r1_gazebo) StderrLine: {'line': b'  By not providing "Findgazebo_ros_pkgs.cmake" in CMAKE_MODULE_PATH this\n'}
[1.151933] (omo_r1_gazebo) StderrLine: {'line': b'  project has asked CMake to find a package configuration file provided by\n'}
[1.152011] (omo_r1_gazebo) StderrLine: {'line': b'  "gazebo_ros_pkgs", but CMake did not find one.\n'}
[1.152080] (omo_r1_gazebo) StderrLine: {'line': b'\n'}
[1.152146] (omo_r1_gazebo) StderrLine: {'line': b'  Could not find a package configuration file provided by "gazebo_ros_pkgs"\n'}
[1.152211] (omo_r1_gazebo) StderrLine: {'line': b'  with any of the following names:\n'}
[1.152278] (omo_r1_gazebo) StderrLine: {'line': b'\n'}
[1.152349] (omo_r1_gazebo) StderrLine: {'line': b'    gazebo_ros_pkgsConfig.cmake\n'}
[1.152411] (omo_r1_gazebo) StderrLine: {'line': b'    gazebo_ros_pkgs-config.cmake\n'}
[1.152476] (omo_r1_gazebo) StderrLine: {'line': b'\n'}
[1.152542] (omo_r1_gazebo) StderrLine: {'line': b'  Add the installation prefix of "gazebo_ros_pkgs" to CMAKE_PREFIX_PATH or\n'}
[1.152608] (omo_r1_gazebo) StderrLine: {'line': b'  set "gazebo_ros_pkgs_DIR" to a directory containing one of the above files.\n'}
[1.152691] (omo_r1_gazebo) StderrLine: {'line': b'  If "gazebo_ros_pkgs" provides a separate development package or SDK, be\n'}
[1.152759] (omo_r1_gazebo) StderrLine: {'line': b'  sure it has been installed.\n'}
[1.152823] (omo_r1_gazebo) StderrLine: {'line': b'\n'}
[1.152885] (omo_r1_gazebo) StderrLine: {'line': b'\x1b[0m\n'}
[1.152950] (omo_r1_gazebo) StdoutLine: {'line': b'-- Configuring incomplete, errors occurred!\n'}
[1.159709] (omo_r1_gazebo) CommandEnded: {'returncode': 1}
[1.182739] (omo_r1_gazebo) JobEnded: {'identifier': 'omo_r1_gazebo', 'rc': 1}
[1.201660] (-) TimerEvent: {}
[1.206874] (omo_r1_description) StdoutLine: {'line': b'-- Found TinyXML2 via Config file: /usr/lib/x86_64-linux-gnu/cmake/tinyxml2\n'}
[1.210469] (ydlidar_sdk) StdoutLine: {'line': b'[  7%] \x1b[32mBuilding C object CMakeFiles/ydlidar_sdk.dir/core/serial/impl/unix/lock.c.o\x1b[0m\n'}
[1.210862] (ydlidar_sdk) StdoutLine: {'line': b'[  7%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/network/PassiveSocket.cpp.o\x1b[0m\n'}
[1.212448] (ydlidar_sdk) StdoutLine: {'line': b'[  7%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/serial/impl/unix/list_ports_linux.cpp.o\x1b[0m\n'}
[1.212688] (ydlidar_sdk) StdoutLine: {'line': b'[  7%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/serial/impl/unix/unix_serial.cpp.o\x1b[0m\n'}
[1.212764] (ydlidar_sdk) StdoutLine: {'line': b'[ 10%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/network/SimpleSocket.cpp.o\x1b[0m\n'}
[1.212825] (ydlidar_sdk) StdoutLine: {'line': b'[ 14%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/network/ActiveSocket.cpp.o\x1b[0m\n'}
[1.212871] (ydlidar_sdk) StdoutLine: {'line': b'[ 14%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/serial/serial.cpp.o\x1b[0m\n'}
[1.213316] (ydlidar_sdk) StdoutLine: {'line': b'[ 16%] \x1b[32mBuilding C object CMakeFiles/ydlidar_sdk.dir/core/json/cJSON.c.o\x1b[0m\n'}
[1.214831] (ydlidar_sdk) StdoutLine: {'line': b'[ 18%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/base/timer.cpp.o\x1b[0m\n'}
[1.215017] (ydlidar_sdk) StdoutLine: {'line': b'[ 18%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/DTSLidarDriver.cpp.o\x1b[0m\n'}
[1.215124] (ydlidar_sdk) StdoutLine: {'line': b'[ 20%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/common/ydlidar_def.cpp.o\x1b[0m\n'}
[1.222053] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found rosidl_generator_c: 4.6.6 (/opt/ros/jazzy/share/rosidl_generator_c/cmake)\n'}
[1.222472] (ydlidar_sdk) StdoutLine: {'line': b'[ 23%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/CYdLidar.cpp.o\x1b[0m\n'}
[1.222598] (ydlidar_sdk) StdoutLine: {'line': b'[ 23%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/ETLidarDriver.cpp.o\x1b[0m\n'}
[1.229710] (ydlidar_sdk) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/SDMLidarDriver.cpp.o\x1b[0m\n'}
[1.241904] (ydlidar_sdk) StdoutLine: {'line': b'[ 27%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/GSLidarDriver.cpp.o\x1b[0m\n'}
[1.250746] (omo_r1_interfaces) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[1.253807] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found rosidl_generator_cpp: 4.6.6 (/opt/ros/jazzy/share/rosidl_generator_cpp/cmake)\n'}
[1.282356] (ydlidar_sdk) StdoutLine: {'line': b'[ 29%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/TiaLidarDriver.cpp.o\x1b[0m\n'}
[1.301815] (-) TimerEvent: {}
[1.329272] (omo_r1_cartographer) StdoutLine: {'line': b'-- Configuring done (1.3s)\n'}
[1.334111] (omo_r1_cartographer) StdoutLine: {'line': b'-- Generating done (0.0s)\n'}
[1.336929] (omo_r1_cartographer) StdoutLine: {'line': b'-- Build files have been written to: /home/mac/dev_ws/omo_robot/build/omo_r1_cartographer\n'}
[1.342734] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[1.353872] (omo_r1_navigation2) StdoutLine: {'line': b'-- Configuring done (1.3s)\n'}
[1.354307] (omo_r1_interfaces) StdoutLine: {'line': b'-- Found rosidl_adapter: 4.6.6 (/opt/ros/jazzy/share/rosidl_adapter/cmake)\n'}
[1.358067] (omo_r1_cartographer) JobEnded: {'identifier': 'omo_r1_cartographer', 'rc': 'SIGINT'}
[1.363713] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:39\x1b[m\x1b[K:\n'}
[1.364299] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/DTSLidarDriver.h:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K"SDK_CMD_STARTSCAN" redefined\n'}
[1.364382] (ydlidar_sdk) StderrLine: {'line': b'   19 | #define SDK_CMD_STARTSCAN 0x01 //\xe5\xbc\x80\xe5\x90\xaf\xe6\xb5\x8b\xe8\xb7\x9d\n'}
[1.364437] (ydlidar_sdk) StderrLine: {'line': b'      | \n'}
[1.364494] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:38\x1b[m\x1b[K:\n'}
[1.364559] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/SDMLidarDriver.h:70:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kthis is the location of the previous definition\n'}
[1.364632] (ydlidar_sdk) StderrLine: {'line': b'   70 | #define SDK_CMD_STARTSCAN 0x60 //\xe5\xbc\x80\xe5\x90\xaf\xe6\xb5\x8b\xe8\xb7\x9d\n'}
[1.364680] (ydlidar_sdk) StderrLine: {'line': b'      | \n'}
[1.364743] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/DTSLidarDriver.h:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K"SDK_CMD_STOPSCAN" redefined\n'}
[1.364811] (ydlidar_sdk) StderrLine: {'line': b'   20 | #define SDK_CMD_STOPSCAN 0x02 //\xe5\x81\x9c\xe6\xad\xa2\xe6\xb5\x8b\xe8\xb7\x9d\n'}
[1.365977] (ydlidar_sdk) StderrLine: {'line': b'      | \n'}
[1.366057] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/SDMLidarDriver.h:71:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kthis is the location of the previous definition\n'}
[1.366129] (ydlidar_sdk) StderrLine: {'line': b'   71 | #define SDK_CMD_STOPSCAN 0x61 //\xe5\x81\x9c\xe6\xad\xa2\xe6\xb5\x8b\xe8\xb7\x9d\n'}
[1.366232] (ydlidar_sdk) StderrLine: {'line': b'      | \n'}
[1.366299] (omo_r1_navigation2) StdoutLine: {'line': b'-- Generating done (0.0s)\n'}
[1.371963] (omo_r1_navigation2) StdoutLine: {'line': b'-- Build files have been written to: /home/mac/dev_ws/omo_robot/build/omo_r1_navigation2\n'}
[1.379863] (ydlidar_sdk) StdoutLine: {'line': b'[ 30%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/YDlidarDriver.cpp.o\x1b[0m\n'}
[1.382427] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[1.382818] (ydlidar_sdk) StdoutLine: {'line': b'[ 32%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/ydlidar_sdk.cpp.o\x1b[0m\n'}
[1.402000] (-) TimerEvent: {}
[1.407908] (omo_r1_navigation2) JobEnded: {'identifier': 'omo_r1_navigation2', 'rc': 'SIGINT'}
[1.477395] (ydlidar_sdk) StdoutLine: {'line': b'[ 34%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/filters/NoiseFilter.cpp.o\x1b[0m\n'}
[1.502739] (-) TimerEvent: {}
[1.535980] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 7.3.2 (/opt/ros/jazzy/share/rmw_implementation_cmake/cmake)\n'}
[1.543737] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found rmw_fastrtps_cpp: 8.4.3 (/opt/ros/jazzy/share/rmw_fastrtps_cpp/cmake)\n'}
[1.562122] (ydlidar_sdk) StdoutLine: {'line': b'[ 36%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/filters/StrongLightFilter.cpp.o\x1b[0m\n'}
[1.595726] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/ETLidarDriver.h:46\x1b[m\x1b[K,\n'}
[1.596113] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/ETLidarDriver.cpp:36\x1b[m\x1b[K:\n'}
[1.596210] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.596268] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.596337] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.596388] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.596442] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.596492] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.596541] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.596588] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.596699] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.596755] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.596808] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.596860] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.596910] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.596959] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.597009] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.597058] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.597108] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.597158] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.597226] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.597290] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.597336] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.597378] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.597422] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.597475] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.597530] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.597573] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.597648] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.597722] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.597778] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.597831] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.597884] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.597937] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.597988] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.598038] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.598091] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.605845] (-) TimerEvent: {}
[1.623301] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[1.623838] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[1.623965] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:29\x1b[m\x1b[K:\n'}
[1.624033] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.624096] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.624164] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.624222] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.624279] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.624333] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.624389] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.624443] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.624524] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.624577] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.624656] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.624719] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.624768] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.624813] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.624862] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.624910] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.624969] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.625021] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.625086] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.625139] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.625188] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.625234] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.625287] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.625335] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.625394] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.625449] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.625503] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.625556] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.625611] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.625707] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.625763] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.625812] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.625870] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.625915] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.625960] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.629681] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/core/serial/common.h:45\x1b[m\x1b[K,\n'}
[1.629916] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/core/serial/serial.cpp:12\x1b[m\x1b[K:\n'}
[1.629975] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.630028] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.630086] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.630129] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.630173] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.630220] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.630270] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.630320] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.630379] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.630427] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.630479] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.630527] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.630574] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.630656] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.630714] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.630765] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.630815] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.630867] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.630922] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.630963] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.631002] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.631044] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.631089] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.631131] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.631179] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.631226] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.631268] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.631331] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.631377] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.631419] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.631484] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.631534] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.631583] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.631653] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.631706] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.664713] (omo_r1_description) StdoutLine: {'line': b'-- Configuring done (1.6s)\n'}
[1.681491] (omo_r1_description) StdoutLine: {'line': b'-- Generating done (0.0s)\n'}
[1.685608] (omo_r1_description) StdoutLine: {'line': b'-- Build files have been written to: /home/mac/dev_ws/omo_robot/build/omo_r1_description\n'}
[1.706040] (-) TimerEvent: {}
[1.713112] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/DTSLidarDriver.h:8\x1b[m\x1b[K,\n'}
[1.713665] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/DTSLidarDriver.cpp:3\x1b[m\x1b[K:\n'}
[1.717758] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.718019] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.718110] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.718170] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.718227] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.718285] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.718347] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.718400] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.718487] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.718542] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.718595] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.718674] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.718733] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.718782] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.718831] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.718879] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.718933] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.718986] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.719043] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.719121] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.719185] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.719239] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.719293] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.719341] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.719399] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.719446] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.719500] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.719549] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.719602] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.719672] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.719735] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.719786] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.719834] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.719881] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.719929] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.733165] (omo_r1_description) JobEnded: {'identifier': 'omo_r1_description', 'rc': 'SIGINT'}
[1.744309] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[1.747995] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[1.748170] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/ydlidar_sdk.cpp:27\x1b[m\x1b[K:\n'}
[1.748250] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.748317] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.748375] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.748420] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.748485] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.748530] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.748582] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.748660] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.748835] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.748886] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.748934] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.748981] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.749026] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.749073] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.749122] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.749176] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.749222] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.749259] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.749308] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.749354] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.749402] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.749451] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.749503] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.749555] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.749631] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.749688] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.749734] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.749779] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.749827] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.749877] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.749935] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.749984] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.750031] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.750078] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.750124] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.804312] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/SDMLidarDriver.h:57\x1b[m\x1b[K,\n'}
[1.804820] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/SDMLidarDriver.cpp:36\x1b[m\x1b[K:\n'}
[1.804921] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.804984] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.805053] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.805102] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.805147] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.805188] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.805238] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.805285] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.805338] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.805381] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.805427] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.805469] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.805511] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.805557] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.805604] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.805670] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.805716] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.805755] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.805799] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.805839] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.805885] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.805922] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.805965] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.806011] (-) TimerEvent: {}
[1.806221] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.806335] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.806387] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.806434] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.806505] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.806551] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.806601] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.806764] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.806842] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.806880] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.806918] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.806956] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.814226] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "3.0.13")  \n'}
[1.821117] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/DTSLidarDriver.h:10\x1b[m\x1b[K:\n'}
[1.821612] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.821996] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.822075] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.822151] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.822221] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.822290] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.822354] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.822421] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.822490] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.822558] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.823585] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.823856] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.823929] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.823985] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.824037] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.824090] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.824159] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.824216] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.824262] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.824312] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.824368] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.824414] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.824459] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.824525] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.824572] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.824634] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.824693] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.824741] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.824791] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.824846] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.824902] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.824945] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.824991] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.825038] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.825083] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.825129] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.838583] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:33\x1b[m\x1b[K:\n'}
[1.839105] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.839320] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.839468] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.839534] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.839590] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.839739] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.839801] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.839861] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.839919] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.840002] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.840117] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.840171] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.840218] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.840270] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.840316] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.840368] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.840435] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.840493] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.840554] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.840657] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.840723] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.840779] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.840837] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.840909] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.840965] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.841021] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.841081] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.841130] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.841180] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.841230] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.841284] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.841337] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.841382] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.841427] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.841475] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.841519] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.844187] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.844401] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.844493] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.844548] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.844598] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.844663] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.844711] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.844763] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.844806] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.844850] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.844891] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.844937] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.850512] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.850809] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.850922] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.850986] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.851037] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.851090] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.851142] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.851206] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.851265] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.851315] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.851358] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.851401] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.854331] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.h:58\x1b[m\x1b[K,\n'}
[1.854704] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:37\x1b[m\x1b[K:\n'}
[1.854776] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.854835] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.854894] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.854947] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.855013] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.855059] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.855111] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.855159] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.855210] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.855257] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.855304] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.855348] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.855395] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.855452] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.855499] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.855545] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.855591] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.855664] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.855721] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.855771] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.855812] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.855851] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.855891] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.855933] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.856007] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.856059] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.856102] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.856148] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.856196] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.856333] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.856414] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.856467] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.856517] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.856566] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.856621] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.868553] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[1.868927] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:46\x1b[m\x1b[K,\n'}
[1.869000] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:56\x1b[m\x1b[K:\n'}
[1.869054] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.869115] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.869225] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.869289] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.869336] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.869377] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.869426] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.869729] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.869878] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.869926] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.869976] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.870027] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.870078] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.870125] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.870162] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.870204] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.870263] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.870327] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.870380] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.870436] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.870482] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.870526] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.870571] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.870611] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.870682] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.870732] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.870781] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.870831] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.870884] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.870926] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.870975] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.871024] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.871069] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.871112] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.871159] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.871205] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/DTSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::DTSLidarDriver::\x1b[01;32m\x1b[KcreateThread\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.871260] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/DTSLidarDriver.cpp:304:45:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.871308] (ydlidar_sdk) StderrLine: {'line': b'  304 |     printf("[YDLIDAR] Create DTS thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K]\\n", \x1b[32m\x1b[K_thread.getHandle()\x1b[m\x1b[K);\n'}
[1.871354] (ydlidar_sdk) StderrLine: {'line': b'      |                                            \x1b[01;35m\x1b[K~^\x1b[m\x1b[K      \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.871401] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K|\x1b[m\x1b[K                       \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.871454] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K            \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.871516] (ydlidar_sdk) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.875504] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found FastRTPS: /opt/ros/jazzy/include (Required is at least version "2.13") \n'}
[1.876688] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/ETLidarDriver.h:51\x1b[m\x1b[K:\n'}
[1.876878] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.877030] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.877091] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.877176] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.877269] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.877317] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.877362] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.877471] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.877521] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.877580] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.877627] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.877743] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.877799] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.877850] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.877957] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.878012] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.878061] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.878104] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.878147] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.878198] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.878247] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.878292] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.878336] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.878387] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.878433] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.878482] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.878531] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.878577] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.878641] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.878702] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.878757] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.878797] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.878841] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.878889] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.878937] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.878983] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.889011] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.889684] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.890018] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.890069] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.890113] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.890159] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.890198] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.890235] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[1.890284] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:46\x1b[m\x1b[K,\n'}
[1.890323] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:26\x1b[m\x1b[K:\n'}
[1.890361] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.890405] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.890456] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.890503] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.890541] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.890580] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.890633] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.890682] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.890726] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.890764] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.890805] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.890843] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.890882] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.890919] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.890956] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.890994] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.891032] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.891069] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.891125] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.891163] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.891202] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.891240] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.891284] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.891320] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.891358] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.891405] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.891442] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.891485] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.891525] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.891561] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.891601] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.891668] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.891708] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.891746] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.891786] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.891827] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.891864] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.891906] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.891952] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.891988] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.892024] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.892060] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.892097] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.892135] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.892185] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.892222] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.892258] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.892295] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.892333] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.892369] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.892408] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.892446] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.892489] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.892524] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.892562] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.892598] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.892651] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.892697] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.892745] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.892784] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.892821] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.892858] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.892897] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.892934] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.897137] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.897410] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.897485] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.897536] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.897578] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.897643] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.897686] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.897723] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.897764] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.897806] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.897848] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.897887] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.901792] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/SDMLidarDriver.h:59\x1b[m\x1b[K:\n'}
[1.902169] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.902353] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.902427] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.902591] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.902675] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.902786] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.902834] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.902876] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.902923] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.903047] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.903092] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.903132] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.903177] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.903221] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.903263] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.903307] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.903355] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.903400] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.903441] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.903481] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.903528] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.903571] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.903624] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.903695] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.903738] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.903782] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.903823] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.903859] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.903898] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.903938] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.903978] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.904018] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.904055] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.904098] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.904145] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.904187] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.904839] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.905011] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.905092] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.905151] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.905196] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.905247] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.905295] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.905342] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.905404] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.905450] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.905490] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.905527] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.906114] (-) TimerEvent: {}
[1.908216] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/serial/common.h:45\x1b[m\x1b[K,\n'}
[1.908602] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:6\x1b[m\x1b[K:\n'}
[1.908709] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.909029] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.909733] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.910430] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.910598] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.910661] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.910716] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.910763] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.910819] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.910869] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.910912] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.910958] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.911009] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.911057] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.911121] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.911171] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.911220] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.911267] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.911325] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.911375] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.911428] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.911519] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.911590] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.911921] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.911990] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.912045] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.912094] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.912144] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.912194] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.912243] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.912308] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.912357] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.912408] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.912457] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.912506] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.912555] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[Kinitialize\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.912610] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:421:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.912692] (ydlidar_sdk) StderrLine: {'line': b'  421 |     error(\x1b[01;35m\x1b[K"Error initializing YDLIDAR check Comms."\x1b[m\x1b[K);\n'}
[1.912738] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.912782] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:427:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.912828] (ydlidar_sdk) StderrLine: {'line': b'  427 |     error(\x1b[01;35m\x1b[K"Error initializing YDLIDAR check status under [%s] and [%d]."\x1b[m\x1b[K,\n'}
[1.912873] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.912917] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:432:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.912976] (ydlidar_sdk) StderrLine: {'line': b'  432 |   info(\x1b[01;35m\x1b[K"Lidar init success, Elapsed time [%u]ms"\x1b[m\x1b[K, getms() - t);\n'}
[1.913023] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.913275] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid CYdLidar::\x1b[01;32m\x1b[KGetLidarVersion\x1b[m\x1b[K(LidarVersion&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.913414] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:446:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.913522] (ydlidar_sdk) StderrLine: {'line': b'  446 |   info(\x1b[01;35m\x1b[K"Lidar version\\n"\x1b[m\x1b[K\n'}
[1.913572] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.913633] (ydlidar_sdk) StderrLine: {'line': b'  447 | \x1b[01;35m\x1b[K        "Firmware version: %u.%u.%u\\n"\x1b[m\x1b[K\n'}
[1.913847] (ydlidar_sdk) StderrLine: {'line': b'      |         \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.913906] (ydlidar_sdk) StderrLine: {'line': b'  448 | \x1b[01;35m\x1b[K        "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.913954] (ydlidar_sdk) StderrLine: {'line': b'      |         \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.914021] (ydlidar_sdk) StderrLine: {'line': b'  449 | \x1b[01;35m\x1b[K        "Serial: %s"\x1b[m\x1b[K,\n'}
[1.914066] (ydlidar_sdk) StderrLine: {'line': b'      |         \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.914111] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[KturnOn\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.914160] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:474:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.914214] (ydlidar_sdk) StderrLine: {'line': b'  474 |       error(\x1b[01;35m\x1b[K"Failed to start scan mode %d"\x1b[m\x1b[K, ret);\n'}
[1.914258] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.914398] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:478:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.914456] (ydlidar_sdk) StderrLine: {'line': b'  478 |   info(\x1b[01;35m\x1b[K"Successed to start scan mode, Elapsed time %u ms"\x1b[m\x1b[K, getms() - t);\n'}
[1.914504] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.914610] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:485:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.914679] (ydlidar_sdk) StderrLine: {'line': b'  485 |     error(\x1b[01;35m\x1b[K"Failed to turn on the Lidar, because the lidar is [%s]."\x1b[m\x1b[K,\n'}
[1.914724] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.914770] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:489:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.914821] (ydlidar_sdk) StderrLine: {'line': b'  489 |   info(\x1b[01;35m\x1b[K"Successed to check the lidar, Elapsed time %u ms"\x1b[m\x1b[K, getms() - t);\n'}
[1.914875] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.914969] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:512:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.915020] (ydlidar_sdk) StderrLine: {'line': b'  512 |   info(\x1b[01;35m\x1b[K"Now lidar is scanning..."\x1b[m\x1b[K);\n'}
[1.915064] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.915109] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::serial::Serial::SerialImpl::\x1b[01;32m\x1b[Kopen\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.915157] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:756:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.915216] (ydlidar_sdk) StderrLine: {'line': b'  756 |         ydlidar::core::common::error(\x1b[01;35m\x1b[K"fcntl F_GETFL failed"\x1b[m\x1b[K);\n'}
[1.915267] (ydlidar_sdk) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.915334] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:761:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.915460] (ydlidar_sdk) StderrLine: {'line': b'  761 |         ydlidar::core::common::error(\x1b[01;35m\x1b[K"fcntl F_SETFL failed"\x1b[m\x1b[K);\n'}
[1.915516] (ydlidar_sdk) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.915565] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[KdoProcessSimple\x1b[m\x1b[K(LaserScan&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.915628] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:788:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.915692] (ydlidar_sdk) StderrLine: {'line': b'  788 |         warn(\x1b[01;35m\x1b[K"[YDLIDAR]: Real point count %lu > fixed point count %d"\x1b[m\x1b[K, count, all_node_count);\n'}
[1.915742] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.915784] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:812:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.915845] (ydlidar_sdk) StderrLine: {'line': b'  812 |     error(\x1b[01;35m\x1b[K"[YDLIDAR]: %d %s\\n"\x1b[m\x1b[K,\n'}
[1.916030] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.916094] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::serial::Serial::SerialImpl::\x1b[01;32m\x1b[Kwaitfordata\x1b[m\x1b[K(std::size_t, uint32_t, std::size_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.916140] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:1038:37:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.916189] (ydlidar_sdk) StderrLine: {'line': b' 1038 |         ydlidar::core::common::warn(\x1b[01;35m\x1b[K"Wait for data [%u]ms timeout"\x1b[m\x1b[K, timeout);\n'}
[1.916236] (ydlidar_sdk) StderrLine: {'line': b'      |                                     \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.916282] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[KturnOff\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.916329] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:831:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.916380] (ydlidar_sdk) StderrLine: {'line': b'  831 |       info(\x1b[01;35m\x1b[K"Now lidar scanning has stopped!"\x1b[m\x1b[K);\n'}
[1.916426] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.916472] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[KgetUserVersion\x1b[m\x1b[K(std::string&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.916518] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:917:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.916565] (ydlidar_sdk) StderrLine: {'line': b'  917 |         error(\x1b[01;35m\x1b[K"Device is not open!"\x1b[m\x1b[K);\n'}
[1.916609] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.916680] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::size_t ydlidar::core::serial::Serial::SerialImpl::\x1b[01;32m\x1b[Kwrite\x1b[m\x1b[K(const uint8_t*, std::size_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.916743] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:1242:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.916806] (ydlidar_sdk) StderrLine: {'line': b' 1242 |         ydlidar::core::common::error(\x1b[01;35m\x1b[K"Failed to write serial port data [%d]"\x1b[m\x1b[K, errno);\n'}
[1.916857] (ydlidar_sdk) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.916910] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:1247:37:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.916961] (ydlidar_sdk) StderrLine: {'line': b' 1247 |         ydlidar::core::common::warn(\x1b[01;35m\x1b[K"Failed to write serial port data, "\x1b[m\x1b[K\n'}
[1.917007] (ydlidar_sdk) StderrLine: {'line': b'      |                                     \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.917053] (ydlidar_sdk) StderrLine: {'line': b' 1248 | \x1b[01;35m\x1b[K                      "real size [%ld] < expect size [%u]"\x1b[m\x1b[K,\n'}
[1.917098] (ydlidar_sdk) StderrLine: {'line': b'      |                       \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.919144] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[KcheckLidarAbnormal\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.919322] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1179:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.919389] (ydlidar_sdk) StderrLine: {'line': b' 1179 |       info(\x1b[01;35m\x1b[K"Single Fixed Size: %d"\x1b[m\x1b[K, m_FixedSize);\n'}
[1.919443] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.919490] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1180:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.919541] (ydlidar_sdk) StderrLine: {'line': b' 1180 |       info(\x1b[01;35m\x1b[K"Sample Rate: %.02fK"\x1b[m\x1b[K, m_SampleRate);\n'}
[1.919588] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.921053] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[KcalcSampleRate\x1b[m\x1b[K(int, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.921236] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1311:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.921303] (ydlidar_sdk) StderrLine: {'line': b' 1311 |     info(\x1b[01;35m\x1b[K"Scan Frequency: %.02fHz"\x1b[m\x1b[K, m_ScanFrequency);\n'}
[1.921372] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.921439] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1313:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.921672] (ydlidar_sdk) StderrLine: {'line': b' 1313 |       info(\x1b[01;35m\x1b[K"Fixed Size: %d"\x1b[m\x1b[K, m_FixedSize);\n'}
[1.921742] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.921792] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1314:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.921860] (ydlidar_sdk) StderrLine: {'line': b' 1314 |     info(\x1b[01;35m\x1b[K"Sample Rate: %.02fK"\x1b[m\x1b[K, m_SampleRate);\n'}
[1.921971] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.922138] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[KgetDeviceHealth\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.922191] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1338:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.922245] (ydlidar_sdk) StderrLine: {'line': b' 1338 |     info(\x1b[01;35m\x1b[K"Lidar running correctly! The health status %s"\x1b[m\x1b[K,\n'}
[1.922291] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.922335] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1342:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.922397] (ydlidar_sdk) StderrLine: {'line': b' 1342 |       error(\x1b[01;35m\x1b[K"Error, Lidar internal error[0x%X] detected. "\x1b[m\x1b[K\n'}
[1.922445] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.922491] (ydlidar_sdk) StderrLine: {'line': b' 1343 | \x1b[01;35m\x1b[K            "Please reboot the device to retry."\x1b[m\x1b[K,\n'}
[1.922537] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.922581] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1354:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.922646] (ydlidar_sdk) StderrLine: {'line': b' 1354 |     error(\x1b[01;35m\x1b[K"Error, cannot retrieve Lidar health code %d"\x1b[m\x1b[K, ret);\n'}
[1.922711] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.922757] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[KgetDeviceInfo\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.922807] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1374:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.922859] (ydlidar_sdk) StderrLine: {'line': b' 1374 |     error(\x1b[01;35m\x1b[K"Fail to get baseplate device information!"\x1b[m\x1b[K);\n'}
[1.922907] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.922956] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1380:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.923007] (ydlidar_sdk) StderrLine: {'line': b' 1380 |     error(\x1b[01;35m\x1b[K"Current SDK does not support current lidar model [%s]"\x1b[m\x1b[K,\n'}
[1.923053] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.923097] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1390:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.923146] (ydlidar_sdk) StderrLine: {'line': b' 1390 |       error(\x1b[01;35m\x1b[K"Incorrect Lidar Type setting..."\x1b[m\x1b[K);\n'}
[1.923191] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.923238] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1410:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.923296] (ydlidar_sdk) StderrLine: {'line': b' 1410 |   info(\x1b[01;35m\x1b[K"Current Lidar Model Code %d"\x1b[m\x1b[K, lidar_model);\n'}
[1.923349] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.923665] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid CYdLidar::\x1b[01;32m\x1b[KhandleSingleChannelDevice\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.923792] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1525:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.923931] (ydlidar_sdk) StderrLine: {'line': b' 1525 |   info(\x1b[01;35m\x1b[K"Single channel current sampling rate: %.02fK"\x1b[m\x1b[K, m_SampleRate);\n'}
[1.923995] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.924102] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid CYdLidar::\x1b[01;32m\x1b[KcheckSampleRate\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.924158] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1541:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.924212] (ydlidar_sdk) StderrLine: {'line': b' 1541 |     info(\x1b[01;35m\x1b[K"Origin sample rate code: %u"\x1b[m\x1b[K, _rate.rate);\n'}
[1.924277] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.924387] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1567:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.924451] (ydlidar_sdk) StderrLine: {'line': b' 1567 |     info(\x1b[01;35m\x1b[K"Current sample rate: %.02fK"\x1b[m\x1b[K, m_SampleRate);\n'}
[1.924500] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.924590] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[KcheckScanFrequency\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.924684] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1589:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.924812] (ydlidar_sdk) StderrLine: {'line': b' 1589 |       info(\x1b[01;35m\x1b[K"Current scan frequency: %.02fHz"\x1b[m\x1b[K, frequency);\n'}
[1.924864] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.924912] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1628:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.924964] (ydlidar_sdk) StderrLine: {'line': b' 1628 |     error(\x1b[01;35m\x1b[K"Current scan frequency[%f] is out of range."\x1b[m\x1b[K,\n'}
[1.925013] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.925061] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.925104] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.925163] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.925211] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.925256] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.925304] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.925350] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.925395] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.925440] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.925596] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.925664] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.925716] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.925806] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1643:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.925867] (ydlidar_sdk) StderrLine: {'line': b' 1643 |   info(\x1b[01;35m\x1b[K"Current scan frequency: %.02fHz"\x1b[m\x1b[K, m_ScanFrequency);\n'}
[1.925907] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.925948] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[KcheckCalibrationAngle\x1b[m\x1b[K(const std::string&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.925997] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1710:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.926043] (ydlidar_sdk) StderrLine: {'line': b' 1710 |       info(\x1b[01;35m\x1b[K"Successfully obtained the %s offset angle[%f] from the lidar[%s]"\x1b[m\x1b[K,\n'}
[1.926088] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.926130] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1719:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.926196] (ydlidar_sdk) StderrLine: {'line': b' 1719 |   info(\x1b[01;35m\x1b[K"Current %s AngleOffset : %f\xc2\xb0"\x1b[m\x1b[K,\n'}
[1.926238] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.926281] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[KcheckConnect\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.926333] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1739:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.926385] (ydlidar_sdk) StderrLine: {'line': b' 1739 |     info(\x1b[01;35m\x1b[K"SDK initializing"\x1b[m\x1b[K);\n'}
[1.926427] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.926921] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1757:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.927041] (ydlidar_sdk) StderrLine: {'line': b' 1757 |       error(\x1b[01;35m\x1b[K"Create driver fail!"\x1b[m\x1b[K);\n'}
[1.927096] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.927144] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1761:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.927196] (ydlidar_sdk) StderrLine: {'line': b' 1761 |     info(\x1b[01;35m\x1b[K"SDK has been initialized"\x1b[m\x1b[K);\n'}
[1.927246] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.927292] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1762:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.927342] (ydlidar_sdk) StderrLine: {'line': b' 1762 |     info(\x1b[01;35m\x1b[K"SDK Version: %s"\x1b[m\x1b[K, lidarPtr->getSDKVersion().c_str());\n'}
[1.927384] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.927669] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1806:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.927776] (ydlidar_sdk) StderrLine: {'line': b' 1806 |       error(\x1b[01;35m\x1b[K"Error, cannot bind to the specified IP Address[%s]"\x1b[m\x1b[K,\n'}
[1.927826] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.928095] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1811:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.928196] (ydlidar_sdk) StderrLine: {'line': b' 1811 |       error(\x1b[01;35m\x1b[K"Error, cannot bind to the specified [%s:%s] and [%s:%d]"\x1b[m\x1b[K,\n'}
[1.928245] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.928336] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1821:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.928391] (ydlidar_sdk) StderrLine: {'line': b' 1821 |   info(\x1b[01;35m\x1b[K"Connect elapsed time %u ms"\x1b[m\x1b[K, getms() - t);\n'}
[1.928435] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.928479] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1822:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.928529] (ydlidar_sdk) StderrLine: {'line': b' 1822 |   info(\x1b[01;35m\x1b[K"Lidar successfully connected [%s:%d]"\x1b[m\x1b[K,\n'}
[1.928575] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.928688] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::\x1b[01;32m\x1b[KcheckStatus\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.928770] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1835:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.928831] (ydlidar_sdk) StderrLine: {'line': b' 1835 |   info(\x1b[01;35m\x1b[K"Check status, Elapsed time %u ms"\x1b[m\x1b[K, getms() - t);\n'}
[1.928875] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.933050] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[1.934402] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::\x1b[01;32m\x1b[KprintLogo\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.934603] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1876:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.934679] (ydlidar_sdk) StderrLine: {'line': b' 1876 |   info(\x1b[01;35m\x1b[K"__   ______  _     ___ ____    _    ____"\x1b[m\x1b[K);\n'}
[1.934726] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.934772] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1877:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.934837] (ydlidar_sdk) StderrLine: {'line': b' 1877 |   info(\x1b[01;35m\x1b[K"\\\\ \\\\ / /  _ \\\\| |   |_ _|  _ \\\\  / \\\\  |  _ \\\\"\x1b[m\x1b[K);\n'}
[1.934884] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.934937] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1878:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.934990] (ydlidar_sdk) StderrLine: {'line': b' 1878 |   info(\x1b[01;35m\x1b[K" \\\\ V /| | | | |    | || | | |/ _ \\\\ | |_) |"\x1b[m\x1b[K);\n'}
[1.935038] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.935085] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1879:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.935143] (ydlidar_sdk) StderrLine: {'line': b' 1879 |   info(\x1b[01;35m\x1b[K"  | | | |_| | |___ | || |_| / ___ \\\\|  _ <"\x1b[m\x1b[K);\n'}
[1.935189] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.935228] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1880:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.935278] (ydlidar_sdk) StderrLine: {'line': b' 1880 |   info(\x1b[01;35m\x1b[K"  |_| |____/|_____|___|____/_/   \\\\_\\\\_| \\\\_\\\\"\x1b[m\x1b[K);\n'}
[1.935324] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.935369] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.cpp:1881:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.935418] (ydlidar_sdk) StderrLine: {'line': b' 1881 |   info(\x1b[01;35m\x1b[K""\x1b[m\x1b[K);\n'}
[1.935468] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[1.940098] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.h:60\x1b[m\x1b[K:\n'}
[1.940438] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.940555] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.940683] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.940745] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.940795] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.940866] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.940922] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.940971] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.941016] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.941078] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.941126] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.941168] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.941210] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.941251] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.941606] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.941734] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.941792] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.941840] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.941887] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.941936] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.941980] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.942025] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.942073] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.942137] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.942174] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.942219] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.942268] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.942314] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.942361] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.942411] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.942463] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.942515] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.942563] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.942632] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.942690] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.942735] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.942780] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.942830] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.942871] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.942913] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.942973] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.943017] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.943061] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.943106] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.943155] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.943196] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.943239] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.943286] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.943332] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.943377] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.943426] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.943476] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.943524] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.943571] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.943638] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.943708] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.943756] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.943809] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.943862] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.943909] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.943958] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.944007] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.944060] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.944105] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.944161] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.944213] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.944268] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.944317] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.944365] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.944415] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.944465] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[1.944519] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[1.954399] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/SDMLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::SDMLidarDriver::\x1b[01;32m\x1b[KcreateThread\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.954782] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/SDMLidarDriver.cpp:812:44:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.954901] (ydlidar_sdk) StderrLine: {'line': b'  812 |     printf("[YDLIDAR] Create SDM thread 0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K\\n", \x1b[32m\x1b[K_thread.getHandle()\x1b[m\x1b[K);\n'}
[1.954962] (ydlidar_sdk) StderrLine: {'line': b'      |                                           \x1b[01;35m\x1b[K~^\x1b[m\x1b[K     \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.955017] (ydlidar_sdk) StderrLine: {'line': b'      |                                            \x1b[01;35m\x1b[K|\x1b[m\x1b[K                      \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.955066] (ydlidar_sdk) StderrLine: {'line': b'      |                                            \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K           \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.955116] (ydlidar_sdk) StderrLine: {'line': b'      |                                           \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.959344] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.959638] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.959764] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.959823] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.959872] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.959918] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.959961] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.960008] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.960052] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.960096] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.960142] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.960182] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.965090] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.965378] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.965475] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.965529] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.965574] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.965637] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.965699] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.965744] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.965785] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.965830] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.965872] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.965911] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.000117] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::GSLidarDriver::\x1b[01;32m\x1b[KwaitPackage\x1b[m\x1b[K(node_info*, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.000591] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:824:39:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.000780] (ydlidar_sdk) StderrLine: {'line': b'  824 |                                 error(\x1b[01;35m\x1b[K"GS cs 0x%02X != 0x%02X"\x1b[m\x1b[K, CheckSumCal, CheckSum);\n'}
[2.000853] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.000908] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:7\x1b[m\x1b[K:\n'}
[2.001021] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.001149] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.001208] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.001258] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.001307] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.001358] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.001399] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.001442] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:854:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.001499] (ydlidar_sdk) StderrLine: {'line': b'  854 |                 debug(\x1b[01;35m\x1b[K"GS lidar module[%d] model[%u]"\x1b[m\x1b[K, moduleNum, model);\n'}
[2.001583] (ydlidar_sdk) StderrLine: {'line': b'      |                       \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.001648] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.001699] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.001748] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.001791] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.001833] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.001879] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.001919] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.001971] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.002018] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.002065] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.002102] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.002137] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.002178] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.002222] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.002263] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.002308] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.002355] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.002393] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.002429] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.002469] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.002513] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.002559] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:910:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking address of packed member of \xe2\x80\x98\x1b[01m\x1b[Knode_info\x1b[m\x1b[K\xe2\x80\x99 may result in an unaligned pointer value [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Waddress-of-packed-member\x07-Waddress-of-packed-member\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.002631] (ydlidar_sdk) StderrLine: {'line': b'  910 |                     &sampleAngle, \x1b[01;35m\x1b[K&(*node).dist\x1b[m\x1b[K);\n'}
[2.002684] (ydlidar_sdk) StderrLine: {'line': b'      |                                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.002722] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:913:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking address of packed member of \xe2\x80\x98\x1b[01m\x1b[Knode_info\x1b[m\x1b[K\xe2\x80\x99 may result in an unaligned pointer value [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Waddress-of-packed-member\x07-Waddress-of-packed-member\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.002769] (ydlidar_sdk) StderrLine: {'line': b'  913 |                     &sampleAngle, \x1b[01;35m\x1b[K&(*node).dist\x1b[m\x1b[K);\n'}
[2.002821] (ydlidar_sdk) StderrLine: {'line': b'      |                                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.002861] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:916:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking address of packed member of \xe2\x80\x98\x1b[01m\x1b[Knode_info\x1b[m\x1b[K\xe2\x80\x99 may result in an unaligned pointer value [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Waddress-of-packed-member\x07-Waddress-of-packed-member\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.002909] (ydlidar_sdk) StderrLine: {'line': b'  916 |                     &sampleAngle, \x1b[01;35m\x1b[K&(*node).dist\x1b[m\x1b[K);\n'}
[2.002954] (ydlidar_sdk) StderrLine: {'line': b'      |                                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.002994] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.003035] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.003080] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[2.003126] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[2.003168] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.003214] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.003258] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[2.003300] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[2.005929] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::GSLidarDriver::\x1b[01;32m\x1b[KsetDeviceAddress\x1b[m\x1b[K(uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.006095] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1337:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.006159] (-) TimerEvent: {}
[2.006329] (ydlidar_sdk) StderrLine: {'line': b' 1337 |         info(\x1b[01;35m\x1b[K"GS lidar count %u"\x1b[m\x1b[K, moduleCount);\n'}
[2.006396] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.007161] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::GSLidarDriver::\x1b[01;32m\x1b[KcreateThread\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.007340] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1453:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.007404] (ydlidar_sdk) StderrLine: {'line': b' 1453 |         error(\x1b[01;35m\x1b[K"Fail to create GS thread"\x1b[m\x1b[K);\n'}
[2.007453] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.007494] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1457:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.007549] (ydlidar_sdk) StderrLine: {'line': b' 1457 |     info(\x1b[01;35m\x1b[K"Create GS thread 0x%X"\x1b[m\x1b[K, m_thread->get_id());\n'}
[2.007603] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.012178] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::YDlidarDriver::\x1b[01;32m\x1b[KcacheScanData\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.012393] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:633:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.012464] (ydlidar_sdk) StderrLine: {'line': b'  633 |             error(\x1b[01;35m\x1b[K"Exit scanning thread!"\x1b[m\x1b[K);\n'}
[2.012517] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.012650] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:666:17:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.012778] (ydlidar_sdk) StderrLine: {'line': b'  666 |           error(\x1b[01;35m\x1b[K"Timeout count: %d"\x1b[m\x1b[K, timeout_count);\n'}
[2.012831] (ydlidar_sdk) StderrLine: {'line': b'      |                 \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.013861] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::YDlidarDriver::\x1b[01;32m\x1b[KparseResponseHeader\x1b[m\x1b[K(uint8_t*, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.014013] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:867:21:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.014126] (ydlidar_sdk) StderrLine: {'line': b'  867 |               error(\x1b[01;35m\x1b[K"Checksum error c[0x%02X] != r[0x%02X]"\x1b[m\x1b[K, csc, csr);\n'}
[2.014203] (ydlidar_sdk) StderrLine: {'line': b'      |                     \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.014258] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:912:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.014313] (ydlidar_sdk) StderrLine: {'line': b'  912 |               warn(\x1b[01;35m\x1b[K"Current pack point count %d too big"\x1b[m\x1b[K, package_Sample_Num);\n'}
[2.014359] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.015744] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::YDlidarDriver::\x1b[01;32m\x1b[KcalcuteCheckSum\x1b[m\x1b[K(node_info*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.015888] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:1178:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.015951] (ydlidar_sdk) StderrLine: {'line': b' 1178 |       error(\x1b[01;35m\x1b[K"Check Sum 0x%04X != 0x%04X"\x1b[m\x1b[K, CheckSumCal, CheckSum);\n'}
[2.016000] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.020263] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::YDlidarDriver::\x1b[01;32m\x1b[KcreateThread\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.020504] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:1937:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.020568] (ydlidar_sdk) StderrLine: {'line': b' 1937 |       error(\x1b[01;35m\x1b[K"[YDLIDAR] Fail to create thread"\x1b[m\x1b[K);\n'}
[2.020624] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.020680] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:1941:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.020728] (ydlidar_sdk) StderrLine: {'line': b' 1941 |     info(\x1b[01;35m\x1b[K"[YDLIDAR] Create thread 0x%X"\x1b[m\x1b[K, m_thread->get_id());\n'}
[2.020772] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.022712] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.023021] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.023126] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[2.023187] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.023232] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[2.023280] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.023327] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[2.023373] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.023418] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[2.023465] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.023507] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[2.023545] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.023582] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual result_t ydlidar::GSLidarDriver::\x1b[01;32m\x1b[KgetDeviceInfo\x1b[m\x1b[K(std::vector<device_info_ex>&, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.023653] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1578:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.023716] (ydlidar_sdk) StderrLine: {'line': b' 1578 |         error(\x1b[01;35m\x1b[K"Fail to get GS lidar count"\x1b[m\x1b[K);\n'}
[2.023767] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.025069] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual result_t ydlidar::GSLidarDriver::\x1b[01;32m\x1b[KgetDeviceInfo2\x1b[m\x1b[K(device_info&, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.025219] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1719:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.025281] (ydlidar_sdk) StderrLine: {'line': b' 1719 |         info(\x1b[01;35m\x1b[K"Get Module[%d] Lidar model[%u]"\x1b[m\x1b[K, id, di.model);\n'}
[2.025331] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.025754] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual bool ydlidar::GSLidarDriver::\x1b[01;32m\x1b[Kota\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.025872] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1775:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.026002] (ydlidar_sdk) StderrLine: {'line': b' 1775 |         error(\x1b[01;35m\x1b[K"[OTA] Not set OTA file"\x1b[m\x1b[K);\n'}
[2.026057] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.026106] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1783:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.026165] (ydlidar_sdk) StderrLine: {'line': b' 1783 |         error(\x1b[01;35m\x1b[K"[OTA] Fail to open OTA file[%s]"\x1b[m\x1b[K, m_OtaName.c_str());\n'}
[2.026213] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.030353] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1797:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.030736] (ydlidar_sdk) StderrLine: {'line': b' 1797 |     info(\x1b[01;35m\x1b[K"[OTA] File size [%.02lf]KB"\x1b[m\x1b[K, data.size() / 1024.0);\n'}
[2.030817] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.030868] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1806:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.030935] (ydlidar_sdk) StderrLine: {'line': b' 1806 |             error(\x1b[01;35m\x1b[K"[OTA] 0x%02X Fail to Start OTA"\x1b[m\x1b[K, addr);\n'}
[2.030983] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.031024] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1813:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.031070] (ydlidar_sdk) StderrLine: {'line': b' 1813 |             error(\x1b[01;35m\x1b[K"[OTA] 0x%02X Fail to download data"\x1b[m\x1b[K, addr);\n'}
[2.031112] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.031153] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1820:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.031197] (ydlidar_sdk) StderrLine: {'line': b' 1820 |             error(\x1b[01;35m\x1b[K"[OTA] 0x%02X Fail to Start OTA"\x1b[m\x1b[K, addr);\n'}
[2.031235] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.031287] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1827:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.031332] (ydlidar_sdk) StderrLine: {'line': b' 1827 |             error(\x1b[01;35m\x1b[K"[OTA] 0x%02X Fail to restart gs lidar"\x1b[m\x1b[K, addr);\n'}
[2.031419] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.031465] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1831:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.031506] (ydlidar_sdk) StderrLine: {'line': b' 1831 |         info(\x1b[01;35m\x1b[K"[OTA] 0x%02X Success to finish OTA"\x1b[m\x1b[K, addr);\n'}
[2.031545] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.031587] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::GSLidarDriver::\x1b[01;32m\x1b[KexecOta\x1b[m\x1b[K(uint8_t, const std::vector<unsigned char>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.031646] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1884:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.031695] (ydlidar_sdk) StderrLine: {'line': b' 1884 |             info(\x1b[01;35m\x1b[K"[OTA] Downloading [%d%%]"\x1b[m\x1b[K, p);\n'}
[2.031742] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.031819] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/GSLidarDriver.cpp:1919:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.031865] (ydlidar_sdk) StderrLine: {'line': b' 1919 |             error(\x1b[01;35m\x1b[K"[OTA] Fail to download [%d] package"\x1b[m\x1b[K, j + 1);\n'}
[2.031907] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.032857] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual result_t ydlidar::TiaLidarDriver::\x1b[01;32m\x1b[Kconnect\x1b[m\x1b[K(const char*, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.032988] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:81:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.033036] (ydlidar_sdk) StderrLine: {'line': b'   81 |         error(\x1b[01;35m\x1b[K"Fail to connect TCP [%s:%d],Error [%s]"\x1b[m\x1b[K,\n'}
[2.033089] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.033222] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:86:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.033286] (ydlidar_sdk) StderrLine: {'line': b'   86 |     info(\x1b[01;35m\x1b[K"Connect TCP [%s:%d]"\x1b[m\x1b[K, m_port.c_str(), m_port2);\n'}
[2.033328] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.033369] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:90:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.033415] (ydlidar_sdk) StderrLine: {'line': b'   90 |         error(\x1b[01;35m\x1b[K"Fail to connect UDP [%s:%d],Error [%s]"\x1b[m\x1b[K,\n'}
[2.033459] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.033499] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.033545] (ydlidar_sdk) StderrLine: {'line': b'   96 |     info(\x1b[01;35m\x1b[K"Connect UDP [%s:%d]"\x1b[m\x1b[K, m_port.c_str(), m_baudrate);\n'}
[2.033586] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.034369] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::TiaLidarDriver::\x1b[01;32m\x1b[KconfigDisconnect\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.034474] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:179:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.034525] (ydlidar_sdk) StderrLine: {'line': b'  179 |         info(\x1b[01;35m\x1b[K"Disconnect TCP"\x1b[m\x1b[K);\n'}
[2.034567] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.035282] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::TiaLidarDriver::\x1b[01;32m\x1b[KcreateThread\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.035400] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:275:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.035475] (ydlidar_sdk) StderrLine: {'line': b'  275 |       error(\x1b[01;35m\x1b[K"Fail to create data thread"\x1b[m\x1b[K);\n'}
[2.035529] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.035667] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:278:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.035766] (ydlidar_sdk) StderrLine: {'line': b'  278 |     info(\x1b[01;35m\x1b[K"Create TIA thread 0x%X"\x1b[m\x1b[K, m_thread->get_id());\n'}
[2.035814] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.035860] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual result_t ydlidar::YDlidarDriver::\x1b[01;32m\x1b[KgetIntensityFlag\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.035909] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:2707:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.035954] (ydlidar_sdk) StderrLine: {'line': b' 2707 |     info(\x1b[01;35m\x1b[K"Start to getting intensity flag"\x1b[m\x1b[K);\n'}
[2.035996] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.036039] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:2740:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.036160] (ydlidar_sdk) StderrLine: {'line': b' 2740 |               warn(\x1b[01;35m\x1b[K"Fail to getting intensity"\x1b[m\x1b[K);\n'}
[2.036224] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.036271] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:2764:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.036348] (ydlidar_sdk) StderrLine: {'line': b' 2764 |       info(\x1b[01;35m\x1b[K"Auto set intensity %d"\x1b[m\x1b[K, m_intensities);\n'}
[2.036387] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.036427] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/YDlidarDriver.cpp:2767:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.036470] (ydlidar_sdk) StderrLine: {'line': b' 2767 |     info(\x1b[01;35m\x1b[K"[YDLIDAR] End to getting intensity flag"\x1b[m\x1b[K);\n'}
[2.036508] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.036553] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::TiaLidarDriver::\x1b[01;32m\x1b[KdataDisconnect\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.036597] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:373:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.036652] (ydlidar_sdk) StderrLine: {'line': b'  373 |         info(\x1b[01;35m\x1b[K"Disconnect UDP"\x1b[m\x1b[K);\n'}
[2.036692] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.037821] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::TiaLidarDriver::\x1b[01;32m\x1b[KparseScanDataThread\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.037924] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:546:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.037973] (ydlidar_sdk) StderrLine: {'line': b'  546 |                     error(\x1b[01;35m\x1b[K"Exit scanning thread!"\x1b[m\x1b[K);\n'}
[2.038018] (ydlidar_sdk) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.038091] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:566:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.038134] (ydlidar_sdk) StderrLine: {'line': b'  566 |                 error(\x1b[01;35m\x1b[K"Timout count [%d]"\x1b[m\x1b[K, timeout_count);\n'}
[2.038176] (ydlidar_sdk) StderrLine: {'line': b'      |                       \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.038490] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::TiaLidarDriver::\x1b[01;32m\x1b[KparseParamInfoThread\x1b[m\x1b[K()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.038574] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:613:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.038647] (ydlidar_sdk) StderrLine: {'line': b'  613 |                 debug(\x1b[01;35m\x1b[K"ScanFreq: %f SampleRate: %f"\x1b[m\x1b[K,\n'}
[2.038700] (ydlidar_sdk) StderrLine: {'line': b'      |                       \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.039346] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::TiaLidarDriver::\x1b[01;32m\x1b[KsetParam\x1b[m\x1b[K(const std::string&, const float&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.039446] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:660:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.039501] (ydlidar_sdk) StderrLine: {'line': b'  660 |             warn(\x1b[01;35m\x1b[K"TIA scanning frequency [%.02fHz] setting is incorrect"\x1b[m\x1b[K, v);\n'}
[2.039544] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.039625] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:669:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.039701] (ydlidar_sdk) StderrLine: {'line': b'  669 |             warn(\x1b[01;35m\x1b[K"TIA sampling rate [%.02fK/s] setting is incorrect"\x1b[m\x1b[K, v);\n'}
[2.039746] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.039860] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:678:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.039915] (ydlidar_sdk) StderrLine: {'line': b'  678 |             warn(\x1b[01;35m\x1b[K"TIA scanning frequency [%dHz] setting is incorrect"\x1b[m\x1b[K, v);\n'}
[2.039961] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.040065] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:687:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.040151] (ydlidar_sdk) StderrLine: {'line': b'  687 |             warn(\x1b[01;35m\x1b[K"TIA sampling rate [%dK/s] setting is incorrect"\x1b[m\x1b[K, v);\n'}
[2.040197] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.040419] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::TiaLidarDriver::\x1b[01;32m\x1b[KsetParam\x1b[m\x1b[K(cJSON*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.040488] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:713:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.040543] (ydlidar_sdk) StderrLine: {'line': b'  713 |         warn(\x1b[01;35m\x1b[K"Fail to set lidar parameter,Error to response"\x1b[m\x1b[K);\n'}
[2.040591] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.040944] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::TiaLidarDriver::\x1b[01;32m\x1b[KsendData\x1b[m\x1b[K(cJSON*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.041030] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:747:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.041083] (ydlidar_sdk) StderrLine: {'line': b'  747 |         debug(\x1b[01;35m\x1b[K"[SEND] %s"\x1b[m\x1b[K, sd.c_str());\n'}
[2.041131] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.041174] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:750:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.041222] (ydlidar_sdk) StderrLine: {'line': b'  750 |         warn(\x1b[01;35m\x1b[K"Fail to send TCP data"\x1b[m\x1b[K);\n'}
[2.041265] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.041374] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::TiaLidarDriver::\x1b[01;32m\x1b[KwaitResp\x1b[m\x1b[K(cJSON*&, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.041479] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:769:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.041536] (ydlidar_sdk) StderrLine: {'line': b'  769 |                 debug(\x1b[01;35m\x1b[K"[RECV] %s"\x1b[m\x1b[K, rd.c_str());\n'}
[2.041575] (ydlidar_sdk) StderrLine: {'line': b'      |                       \x1b[01;35m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.041626] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:774:22:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.041690] (ydlidar_sdk) StderrLine: {'line': b'  774 |                 warn(\x1b[01;35m\x1b[K"Fail to wait response,Error json format"\x1b[m\x1b[K);\n'}
[2.041732] (ydlidar_sdk) StderrLine: {'line': b'      |                      \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.041777] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:781:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.041820] (ydlidar_sdk) StderrLine: {'line': b'  781 |     warn(\x1b[01;35m\x1b[K"Waiting for response timeout [%u]ms"\x1b[m\x1b[K, timeout);\n'}
[2.041912] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.041960] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::TiaLidarDriver::\x1b[01;32m\x1b[KgetScanData\x1b[m\x1b[K(node_info*, size_t&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.042009] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:803:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.042059] (ydlidar_sdk) StderrLine: {'line': b'  803 |             warn(\x1b[01;35m\x1b[K"Fail to recv UDP data"\x1b[m\x1b[K);\n'}
[2.042103] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.042178] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:808:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.042221] (ydlidar_sdk) StderrLine: {'line': b'  808 |             warn(\x1b[01;35m\x1b[K"The packet length [%d] < the expected value [%d]"\x1b[m\x1b[K,\n'}
[2.042257] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.042320] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:849:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.042362] (ydlidar_sdk) StderrLine: {'line': b'  849 |         warn(\x1b[01;35m\x1b[K"Data packet lost,current packet index [%u],last packet index [%u]"\x1b[m\x1b[K,\n'}
[2.042401] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.042487] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:870:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.042536] (ydlidar_sdk) StderrLine: {'line': b'  870 |             warn(\x1b[01;35m\x1b[K"The format of the [%d] packet header is incorrect"\x1b[m\x1b[K, i + 1);\n'}
[2.042583] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.042852] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:904:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.042941] (ydlidar_sdk) StderrLine: {'line': b'  904 |                     debug(\x1b[01;35m\x1b[K"Zero time [%llu]ns"\x1b[m\x1b[K, lastZeroTime);\n'}
[2.042996] (ydlidar_sdk) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.043082] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/TiaLidarDriver.cpp:948:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.043145] (ydlidar_sdk) StderrLine: {'line': b'  948 |         debug(\x1b[01;35m\x1b[K"Angle range [%.02f~%.02f] stamp [%lu]ns index [%u]"\x1b[m\x1b[K,\n'}
[2.043187] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.062827] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found sensor_msgs: 5.3.6 (/opt/ros/jazzy/share/sensor_msgs/cmake)\n'}
[2.106389] (-) TimerEvent: {}
[2.122578] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found visualization_msgs: 5.3.6 (/opt/ros/jazzy/share/visualization_msgs/cmake)\n'}
[2.149850] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found std_srvs: 5.3.6 (/opt/ros/jazzy/share/std_srvs/cmake)\n'}
[2.174076] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.17.3 (/opt/ros/jazzy/share/ament_lint_auto/cmake)\n'}
[2.206511] (-) TimerEvent: {}
[2.306964] (-) TimerEvent: {}
[2.308453] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'copyright' to check source files copyright and LICENSE\n"}
[2.313582] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'cppcheck' to perform static code analysis on C / C++ code\n"}
[2.313806] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configured cppcheck include dirs: /home/mac/dev_ws/omo_robot/src/ydlidar_ros2_driver/src\n'}
[2.313849] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configured cppcheck exclude dirs and/or files: \n'}
[2.317102] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'cpplint' to check C / C++ code against the Google style\n"}
[2.317298] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configured cpplint exclude dirs and/or files: \n'}
[2.318045] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'flake8' to check Python code syntax and style conventions\n"}
[2.318207] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Configured 'flake8' exclude dirs and/or files: \n"}
[2.319171] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[2.320077] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'pep257' to check Python code against some of the docstring style conventions in PEP 257\n"}
[2.323161] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'uncrustify' to check C / C++ code style\n"}
[2.323347] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configured uncrustify additional arguments: \n'}
[2.324092] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[2.325526] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configuring done (2.2s)\n'}
[2.339437] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Generating done (0.0s)\n'}
[2.343203] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Build files have been written to: /home/mac/dev_ws/omo_robot/build/ydlidar_ros2_driver\n'}
[2.361418] (ydlidar_ros2_driver) JobEnded: {'identifier': 'ydlidar_ros2_driver', 'rc': 'SIGINT'}
[2.363060] (omo_r1_interfaces) StdoutLine: {'line': b'-- Found ament_cmake_ros: 0.12.0 (/opt/ros/jazzy/share/ament_cmake_ros/cmake)\n'}
[2.407111] (-) TimerEvent: {}
[2.483012] (ydlidar_sdk) StdoutLine: {'line': b'[ 38%] \x1b[32m\x1b[1mLinking CXX static library libydlidar_sdk.a\x1b[0m\n'}
[2.507234] (-) TimerEvent: {}
[2.566247] (ydlidar_sdk) StdoutLine: {'line': b'[ 38%] Built target ydlidar_sdk\n'}
[2.595263] (ydlidar_sdk) StdoutLine: {'line': b'[ 47%] \x1b[32mBuilding CXX object examples/CMakeFiles/gs_ota.dir/gs_ota.cpp.o\x1b[0m\n'}
[2.595426] (ydlidar_sdk) StdoutLine: {'line': b'[ 47%] \x1b[32mBuilding CXX object examples/CMakeFiles/tea_test.dir/tea_test.cpp.o\x1b[0m\n'}
[2.595753] (ydlidar_sdk) StdoutLine: {'line': b'[ 49%] \x1b[32mBuilding CXX object examples/CMakeFiles/gs_restart.dir/gs_restart.cpp.o\x1b[0m\n'}
[2.595850] (ydlidar_sdk) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object examples/CMakeFiles/sdm18_test.dir/sdm18_test.cpp.o\x1b[0m\n'}
[2.595912] (ydlidar_sdk) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object examples/CMakeFiles/scl_test.dir/scl_test.cpp.o\x1b[0m\n'}
[2.595971] (ydlidar_sdk) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object examples/CMakeFiles/sdm_test.dir/sdm_test.cpp.o\x1b[0m\n'}
[2.596060] (ydlidar_sdk) StdoutLine: {'line': b'[ 49%] \x1b[32mBuilding CXX object examples/CMakeFiles/gs_test2.dir/gs_test2.cpp.o\x1b[0m\n'}
[2.596165] (ydlidar_sdk) StdoutLine: {'line': b'[ 52%] \x1b[32mBuilding CXX object examples/CMakeFiles/tof_test.dir/tof_test.cpp.o\x1b[0m\n'}
[2.596242] (ydlidar_sdk) StdoutLine: {'line': b'[ 54%] \x1b[32mBuilding CXX object examples/CMakeFiles/tia_test.dir/tia_test.cpp.o\x1b[0m\n'}
[2.596327] (ydlidar_sdk) StdoutLine: {'line': b'[ 56%] \x1b[32mBuilding CXX object examples/CMakeFiles/gs_test.dir/gs_test.cpp.o\x1b[0m\n'}
[2.596980] (ydlidar_sdk) StdoutLine: {'line': b'[ 60%] \x1b[32mBuilding CXX object examples/CMakeFiles/tmini-sh_test.dir/tmini-sh_test.cpp.o\x1b[0m\n'}
[2.597100] (ydlidar_sdk) StdoutLine: {'line': b'[ 60%] \x1b[32mBuilding CXX object examples/CMakeFiles/tri_and_gs_test.dir/tri_and_gs_test.cpp.o\x1b[0m\n'}
[2.599876] (ydlidar_sdk) StdoutLine: {'line': b'[ 61%] \x1b[32mBuilding CXX object examples/CMakeFiles/tri_test.dir/tri_test.cpp.o\x1b[0m\n'}
[2.601539] (ydlidar_sdk) StdoutLine: {'line': b'[ 63%] \x1b[32mBuilding CXX object examples/CMakeFiles/tri_restart.dir/tri_restart.cpp.o\x1b[0m\n'}
[2.603306] (ydlidar_sdk) StdoutLine: {'line': b'[ 65%] \x1b[32mBuilding CXX object examples/CMakeFiles/et_test.dir/et_test.cpp.o\x1b[0m\n'}
[2.607676] (ydlidar_sdk) StdoutLine: {'line': b'[ 67%] \x1b[32mBuilding CXX object examples/CMakeFiles/tmini_test.dir/tmini_test.cpp.o\x1b[0m\n'}
[2.607903] (-) TimerEvent: {}
[2.708178] (-) TimerEvent: {}
[2.751759] (omo_r1_interfaces) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[2.808745] (-) TimerEvent: {}
[2.910997] (-) TimerEvent: {}
[3.014773] (-) TimerEvent: {}
[3.115425] (-) TimerEvent: {}
[3.212353] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.213031] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.213409] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/scl_test.cpp:34\x1b[m\x1b[K:\n'}
[3.213777] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.214092] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.214381] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.214661] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.215026] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.215290] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.215555] (-) TimerEvent: {}
[3.220062] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.220535] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.220965] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.221291] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.221587] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.221936] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.222235] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.222527] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.222869] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.223168] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.223452] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.228044] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.228444] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.228798] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.229593] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.230270] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.230533] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.230828] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.231090] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.231324] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.231567] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.235093] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.235458] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.235785] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.236079] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.236347] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.236609] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.236913] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.237149] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.237403] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.240741] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.241238] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/sdm18_test.cpp:34\x1b[m\x1b[K:\n'}
[3.241526] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.241856] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.242201] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.242468] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.242775] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.247796] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.248190] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.248441] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.248750] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.249079] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.249346] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.252705] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.253231] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.253545] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.253895] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.254192] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.254481] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.254825] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.255183] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.255487] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.260017] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.260417] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.260788] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.261119] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.261460] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.261792] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.262072] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.262347] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.262635] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.262948] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.263246] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.263517] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.268062] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.268427] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.268830] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.269148] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.269422] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.269692] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tri_restart.cpp:1\x1b[m\x1b[K:\n'}
[3.269990] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.270269] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.270547] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.270854] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.271115] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.271372] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.274715] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.275249] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.275589] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.275934] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.276205] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.276472] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.276778] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.277074] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.277340] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.277599] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.277915] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.278219] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.278515] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.282040] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.282406] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.282749] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.283072] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.283352] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.283671] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.284010] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.284295] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.284573] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.289127] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.289511] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.289900] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.290244] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.290539] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.290868] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.291147] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.315763] (-) TimerEvent: {}
[3.347414] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.348114] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.348470] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tri_test.cpp:34\x1b[m\x1b[K:\n'}
[3.348809] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.349145] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.349454] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.349782] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.354728] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.355245] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.355557] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.355858] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.356129] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.356390] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.360744] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.361249] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.361559] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.361899] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.362336] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.362682] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.363017] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.363298] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.363666] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.363986] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.364258] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.364522] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.368081] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.368449] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.368892] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.369195] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.369506] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.369949] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.370258] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.370543] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.370882] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.371165] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.371428] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.371727] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.372025] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.416763] (-) TimerEvent: {}
[3.465461] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.467279] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.471027] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_ota.cpp:40\x1b[m\x1b[K:\n'}
[3.471396] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.471740] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.472091] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.472380] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.472729] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.473046] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.473318] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.473575] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.477130] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.477480] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tia_test.cpp:5\x1b[m\x1b[K:\n'}
[3.477841] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.478168] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.478468] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.478785] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.479130] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.479405] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.481542] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.481952] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.482269] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.482548] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.485433] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.486209] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.486551] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.486911] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.487200] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.487476] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.487803] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.488135] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.488428] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.488732] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.489008] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.489261] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.489539] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.494104] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.494533] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.494916] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.495212] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.495457] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.495781] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.496089] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.496425] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.499911] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.500344] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.500687] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.501010] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.501301] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.501583] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.501890] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.502153] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.502421] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.507966] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.508362] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.508687] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.509031] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.509307] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.509593] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.509962] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.510237] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.510509] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.516092] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.516465] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.516955] (-) TimerEvent: {}
[3.517323] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.517747] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.518079] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.518330] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.518595] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.526777] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.527081] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.527393] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.527666] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.527964] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.528255] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.528487] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.528769] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.529024] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.529252] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tof_test.cpp:38\x1b[m\x1b[K:\n'}
[3.529484] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.536057] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.536515] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.536865] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.537148] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.537394] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.537767] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.538064] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.538325] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.538541] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.538812] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.539054] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.539293] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.539535] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.547418] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.547840] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.548197] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.548500] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.548813] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.549117] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.549394] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.549676] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.549971] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.550213] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.550542] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.557185] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.557570] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.557927] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.558235] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.558522] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.558866] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.559150] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.559390] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.560744] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.561150] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.561464] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.561845] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.562150] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tea_test.cpp:38\x1b[m\x1b[K:\n'}
[3.562422] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.562760] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.563075] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.563348] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.563606] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.568210] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.568539] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.568887] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.569196] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.569439] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.569743] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.570018] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.570256] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.570506] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.574022] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.574398] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.574748] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.575052] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.575353] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.575612] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.575952] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.576248] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.576603] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.581207] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.582442] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.583242] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.583582] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.583926] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.584203] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.587947] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.588847] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.589231] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.589551] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.589932] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.590220] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.590497] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.590823] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.591148] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tri_and_gs_test.cpp:1\x1b[m\x1b[K:\n'}
[3.591427] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.594942] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.595395] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.595750] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.596073] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.596368] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.596656] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.596973] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.597276] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.597561] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.597963] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.598303] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.602695] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.603233] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.603561] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.603906] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.604219] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.604486] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.604774] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.605060] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.605337] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.605639] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.605951] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.606257] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.606558] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.613154] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.613535] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.613913] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.614221] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.614533] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.614945] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.615246] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.615523] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.620079] (-) TimerEvent: {}
[3.620469] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.620926] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.621269] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.621567] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.621895] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/sdm_test.cpp:34\x1b[m\x1b[K:\n'}
[3.622171] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.622443] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.622796] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.623115] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.623409] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.626884] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.627682] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.628446] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.628850] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.629124] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.629408] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.632751] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.633229] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.633516] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.633833] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.634102] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.634360] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.634606] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.634942] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.635212] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.635430] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.639879] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.640303] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.640606] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.641061] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.641359] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.641651] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.641908] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.642172] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.642440] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.642790] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.643110] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.643393] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.647882] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.648342] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.648691] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.649047] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.649365] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini_test.cpp:5\x1b[m\x1b[K:\n'}
[3.649686] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.650036] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.650346] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.650603] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.650959] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.651236] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.651498] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.656039] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.656492] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.656907] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.657238] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.657592] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.657951] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.658260] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.658548] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.658862] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.659151] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.659450] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.663039] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.663439] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.663794] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.664098] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.664393] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.664760] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.665137] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.665470] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.669007] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.669332] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.669646] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.669993] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.670305] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.670562] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.670864] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.671139] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.671385] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.674745] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.675223] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.675522] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_test.cpp:40\x1b[m\x1b[K:\n'}
[3.675864] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.676138] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.676478] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.676818] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.677115] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.677391] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.677662] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.677995] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.678315] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.678587] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.683147] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.683492] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.683838] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.684120] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.684425] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.684733] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.685025] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.685303] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.685598] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.690177] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.690509] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.690894] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.691206] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.691490] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.691850] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.692153] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.692432] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.692725] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.693027] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.693307] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.697724] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.698268] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.698599] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.698966] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.699279] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.699579] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.699985] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.700287] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_restart.cpp:40\x1b[m\x1b[K:\n'}
[3.700577] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.700913] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.701262] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.701558] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.706150] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.706516] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.706893] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.707208] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.707564] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.707913] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.708216] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.708486] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.708812] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.709112] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.709391] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.713884] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.714337] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.714704] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.715058] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.715346] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.715648] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.716007] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.716310] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.716598] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.716981] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.717261] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.717539] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.722100] (-) TimerEvent: {}
[3.722566] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.723060] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.723392] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.723751] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.724112] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.724384] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.724715] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.725020] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.725304] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.725583] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.729930] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini-sh_test.cpp:5\x1b[m\x1b[K:\n'}
[3.730358] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.730710] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.731017] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.731292] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.731552] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.731888] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.732153] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.735007] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.735484] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.735866] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.736206] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.736462] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.736703] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.736995] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.737268] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.737489] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.737785] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.738068] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.738362] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.741705] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.742211] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.742539] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.742886] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.743171] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.743486] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.743831] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.744111] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.744361] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.744660] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.745017] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.745313] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.745579] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.750178] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.750548] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.750925] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.796742] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.797333] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.797703] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_test2.cpp:7\x1b[m\x1b[K:\n'}
[3.798062] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.798379] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.798715] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.799037] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.799335] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.799605] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.799957] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.800218] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.800556] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.805149] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.809041] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.809439] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.809809] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.810138] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.810417] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.810709] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.811013] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.811284] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.815675] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.816248] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.816657] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.817026] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.817336] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.817672] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.818058] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.818423] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.818765] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.819078] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.819408] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.822842] (-) TimerEvent: {}
[3.823238] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.823788] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.824173] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.824473] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.824788] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.825075] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.825356] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.828885] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.829374] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/et_test.cpp:34\x1b[m\x1b[K:\n'}
[3.829714] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::\x1b[01;32m\x1b[Kjoin\x1b[m\x1b[K(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.830041] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.830310] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.830604] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.830935] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.831194] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.831521] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.836091] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.836484] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.837101] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.837426] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.837751] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.838053] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.838313] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.838574] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.839022] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.839365] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.842766] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.843237] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.844066] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.844353] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.844601] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.844922] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.845249] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.845572] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.849026] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.849415] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.849739] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.850072] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.850315] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.850582] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.850914] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.851192] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.851452] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.853007] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.853364] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/scl_test.cpp:40\x1b[m\x1b[K:\n'}
[3.853742] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.854081] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.854424] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.854741] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.855020] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.855302] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.855574] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.859155] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.859511] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.859856] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.860141] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.860381] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.860675] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.860976] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.861226] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.861490] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.861806] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.862074] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.862323] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.862568] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.867128] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.867486] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.867844] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.868186] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.868508] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.872065] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.872441] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.872772] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.873068] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.873339] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.876701] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.877480] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.877849] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.878494] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.878856] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.879168] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.879513] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tof_test.cpp:40\x1b[m\x1b[K:\n'}
[3.880070] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.884168] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.884488] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.884796] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.885026] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.885276] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.885553] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.886217] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.886839] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.887141] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.887390] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.890762] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.891227] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.891489] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.891783] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.892025] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.892268] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.892490] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.892744] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.892994] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.893201] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.893425] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.898040] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.898711] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.899075] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.899359] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.899653] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.899991] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.900237] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.900486] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.900799] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.901014] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.901273] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.901520] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.905078] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.905417] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.905726] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.906033] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.906308] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[3.906557] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.906878] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[3.907134] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.907396] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[3.911750] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.912549] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[3.912866] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.913159] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[3.913391] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.913656] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tia_test.cpp:6\x1b[m\x1b[K:\n'}
[3.913966] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.914217] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.914452] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.915057] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.915435] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.915729] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.919826] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.920649] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.921005] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.921264] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.921534] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.922251] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.922592] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.922914] (-) TimerEvent: {}
[3.923240] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.923581] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.927070] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.927480] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.927796] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.928064] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.928311] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.928563] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.929922] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.930577] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.931118] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.931432] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.931738] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.932001] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.932219] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.932430] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.932680] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.933177] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.933419] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.933646] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.934107] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.934339] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.934556] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.934825] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.935055] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.935285] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[3.935501] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.935757] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[3.936021] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.936265] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[3.936468] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.937005] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[3.937793] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.938367] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[3.938672] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.939225] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tea_test.cpp:39\x1b[m\x1b[K:\n'}
[3.939485] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.939772] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.940042] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.940266] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.940480] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.941002] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.941258] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.941490] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.941789] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.942049] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.942292] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.942520] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.942798] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.943080] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.943331] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.943598] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.943976] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.944203] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.944411] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.944698] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.945012] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.945531] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.945842] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.946115] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.946746] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.947048] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.947300] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.947851] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.948156] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.948427] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.948782] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.949300] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.949578] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.950155] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.950423] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.950743] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.951252] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_ota.cpp:41\x1b[m\x1b[K:\n'}
[3.951588] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.952309] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.952686] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.953015] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.953280] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.953541] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.953834] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.954092] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.954359] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.954642] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.954922] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.955170] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.955438] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.955712] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.955970] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.956204] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.956463] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.956720] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.956951] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.957186] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.957448] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.957710] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.957995] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.958257] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[3.958507] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.958814] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[3.959064] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.959343] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[3.959574] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.959873] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[3.960117] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.960355] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[3.960592] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.960865] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.961118] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.961392] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.961643] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.961895] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.962141] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.962349] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.962574] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.962836] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.963059] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.963269] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.963574] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.963837] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.964065] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.964271] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.964475] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/scl_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[01;32m\x1b[K main\x1b[m\x1b[K(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.964763] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/scl_test.cpp:340:33:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%llu\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Klong long unsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<LaserPoint>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.965049] (ydlidar_sdk) StderrLine: {'line': b'  340 |       printf("Scan received [\x1b[01;35m\x1b[K%llu\x1b[m\x1b[K] points stamp [%llu]\\n",\n'}
[3.965253] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[01;35m\x1b[K~~~^\x1b[m\x1b[K\n'}
[3.965496] (ydlidar_sdk) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.965775] (ydlidar_sdk) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[Klong long unsigned int\x1b[m\x1b[K\n'}
[3.966034] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K%lu\x1b[m\x1b[K\n'}
[3.966294] (ydlidar_sdk) StderrLine: {'line': b'  341 |              \x1b[32m\x1b[Kscan.points.size()\x1b[m\x1b[K,\n'}
[3.966540] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K  \n'}
[3.967153] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.967434] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Kstd::vector<LaserPoint>::size_type {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.967731] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/scl_test.cpp:340:53:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%llu\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Klong long unsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[Kuint64_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.968008] (ydlidar_sdk) StderrLine: {'line': b'  340 |       printf("Scan received [%llu] points stamp [\x1b[01;35m\x1b[K%llu\x1b[m\x1b[K]\\n",\n'}
[3.968216] (ydlidar_sdk) StderrLine: {'line': b'      |                                                  \x1b[01;35m\x1b[K~~~^\x1b[m\x1b[K\n'}
[3.968447] (ydlidar_sdk) StderrLine: {'line': b'      |                                                     \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.968702] (ydlidar_sdk) StderrLine: {'line': b'      |                                                     \x1b[01;35m\x1b[Klong long unsigned int\x1b[m\x1b[K\n'}
[3.968963] (ydlidar_sdk) StderrLine: {'line': b'      |                                                  \x1b[32m\x1b[K%lu\x1b[m\x1b[K\n'}
[3.969194] (ydlidar_sdk) StderrLine: {'line': b'  341 |              scan.points.size(),\n'}
[3.969421] (ydlidar_sdk) StderrLine: {'line': b'  342 |              \x1b[32m\x1b[Kscan.stamp\x1b[m\x1b[K);\n'}
[3.969676] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[32m\x1b[K~~~~~~~~~~\x1b[m\x1b[K                              \n'}
[3.970155] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.970416] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[32m\x1b[Kuint64_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.970714] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_restart.cpp:41\x1b[m\x1b[K:\n'}
[3.970968] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.971205] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.971486] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.971798] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.972086] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.972347] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.972637] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.972958] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.973231] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.973541] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.973832] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.974057] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.974282] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.974494] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.974747] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.975030] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.975253] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.975480] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.975750] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.976016] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.976237] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.976462] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini_test.cpp:6\x1b[m\x1b[K:\n'}
[3.976700] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.976925] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.977147] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.977358] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.977565] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.977830] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.978094] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.978345] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.978654] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.978996] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.979196] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.979411] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.979642] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.979904] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.980124] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.980375] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.980612] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.980895] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.981112] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.981323] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.981537] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.981792] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.982025] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.982257] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.982479] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.982723] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.982965] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.983523] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.983831] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.984075] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.984308] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.984537] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.984774] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.985007] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.985270] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.985502] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.985787] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.986059] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.986333] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.986570] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.987172] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.987487] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.987777] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.988016] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tia_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[01;32m\x1b[K main\x1b[m\x1b[K(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.988226] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tia_test.cpp:105:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.988455] (ydlidar_sdk) StderrLine: {'line': b'  105 |     error(\x1b[01;35m\x1b[K"Error %s"\x1b[m\x1b[K, laser.DescribeError());\n'}
[3.988706] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.988936] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.989193] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.989412] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.989643] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.989896] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tia_test.cpp:114:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.990120] (ydlidar_sdk) StderrLine: {'line': b'  114 |       info(\x1b[01;35m\x1b[K"Scan received at [%.02f]Hz [%u] points in [%.03f]s"\x1b[m\x1b[K,\n'}
[3.990335] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.990549] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.990816] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.991064] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[3.991289] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.991524] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tof_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[01;32m\x1b[K main\x1b[m\x1b[K(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.991816] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tof_test.cpp:288:30:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.992091] (ydlidar_sdk) StderrLine: {'line': b'  288 |           core::common::warn(\x1b[01;35m\x1b[K"first %llu last %llu size %lu"\x1b[m\x1b[K,\n'}
[3.992357] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.992607] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tof_test.cpp:293:30:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.992879] (ydlidar_sdk) StderrLine: {'line': b'  293 |           core::common::info(\x1b[01;35m\x1b[K"first %llu last %llu size %lu"\x1b[m\x1b[K,\n'}
[3.993116] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.993381] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tof_test.cpp:302:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.993662] (ydlidar_sdk) StderrLine: {'line': b'  302 |       core::common::error(\x1b[01;35m\x1b[K"Failed to get Lidar Data"\x1b[m\x1b[K);\n'}
[3.993951] (ydlidar_sdk) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.994185] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tia_test.cpp:121:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.994430] (ydlidar_sdk) StderrLine: {'line': b'  121 |       error(\x1b[01;35m\x1b[K"Failed to get lidar data"\x1b[m\x1b[K);\n'}
[3.994708] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.994967] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.995186] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.995454] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[3.995735] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.995971] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[3.996191] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.996414] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[3.996656] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.996898] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[3.997118] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.997332] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[3.997553] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.997817] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini-sh_test.cpp:6\x1b[m\x1b[K:\n'}
[3.998041] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.998270] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.998533] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.998833] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.999110] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.999367] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.999659] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.999909] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.000168] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.000418] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.002874] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.003242] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.003493] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.003787] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.004032] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.004299] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.004555] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.004823] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.005192] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.006131] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.006391] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.006650] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.006931] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.007216] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.007481] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.007812] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.008071] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.008300] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.008918] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.009250] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.009537] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[4.009872] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[4.010123] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.010359] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.010601] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[4.010877] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[4.011103] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.011341] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.011606] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[4.011888] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.012127] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[4.012366] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.012606] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[4.012895] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.013142] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[4.013375] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.013608] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[4.013892] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.014266] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.014564] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.014904] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[4.015158] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.015420] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[4.015730] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.016000] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[4.016244] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.016547] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[4.017683] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.018027] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[4.018298] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.018559] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.018873] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.019158] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[4.019403] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.019685] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[4.019934] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.020153] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[4.020377] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.020635] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[4.020901] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.021115] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[4.021335] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.021547] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tea_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[01;32m\x1b[K main\x1b[m\x1b[K(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.021804] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tea_test.cpp:280:26:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.022041] (ydlidar_sdk) StderrLine: {'line': b'  280 |       core::common::info(\x1b[01;35m\x1b[K"[%u] points Stamp [%u]ms"\x1b[m\x1b[K,\n'}
[4.022244] (ydlidar_sdk) StderrLine: {'line': b'      |                          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.022446] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.022692] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.022980] (-) TimerEvent: {}
[4.023378] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[4.023775] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.024086] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[4.024362] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.024651] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[4.025381] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.025638] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[4.025906] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.028263] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[4.029344] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.029651] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[01;32m\x1b[K main\x1b[m\x1b[K(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.030236] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini_test.cpp:143:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.030550] (ydlidar_sdk) StderrLine: {'line': b'  143 |     error(\x1b[01;35m\x1b[K"Fail to initialize %s"\x1b[m\x1b[K, laser.DescribeError());\n'}
[4.030885] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.031135] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini_test.cpp:151:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.031386] (ydlidar_sdk) StderrLine: {'line': b'  151 |     warn(\x1b[01;35m\x1b[K"Fail to get pitch angle"\x1b[m\x1b[K);\n'}
[4.031639] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.032067] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini_test.cpp:155:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.032360] (ydlidar_sdk) StderrLine: {'line': b'  155 |     info(\x1b[01;35m\x1b[K"Pitch angle [%.02f]\xc2\xb0"\x1b[m\x1b[K, pitch);\n'}
[4.033078] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.033967] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini_test.cpp:162:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.034265] (ydlidar_sdk) StderrLine: {'line': b'  162 |     error(\x1b[01;35m\x1b[K"Fail to start %s"\x1b[m\x1b[K, laser.DescribeError());\n'}
[4.034536] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.035096] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini_test.cpp:171:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.035458] (ydlidar_sdk) StderrLine: {'line': b'  171 |       info(\x1b[01;35m\x1b[K"[%u] points [%.02f(%.02f)]Hz"\x1b[m\x1b[K,\n'}
[4.035796] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.036088] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini_test.cpp:184:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.036364] (ydlidar_sdk) StderrLine: {'line': b'  184 |         error(\x1b[01;35m\x1b[K"Failed to get Lidar Data"\x1b[m\x1b[K);\n'}
[4.036647] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.036954] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_restart.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[01;32m\x1b[K main\x1b[m\x1b[K(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.037237] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_restart.cpp:228:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.037552] (ydlidar_sdk) StderrLine: {'line': b'  228 |       core::common::error(\x1b[01;35m\x1b[K"Fail to initialize %s"\x1b[m\x1b[K, laser.DescribeError());\n'}
[4.037865] (ydlidar_sdk) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.038106] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_restart.cpp:235:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.038354] (ydlidar_sdk) StderrLine: {'line': b'  235 |       core::common::error(\x1b[01;35m\x1b[K"Fail to turn on"\x1b[m\x1b[K);\n'}
[4.038586] (ydlidar_sdk) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.038861] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_restart.cpp:244:28:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.039120] (ydlidar_sdk) StderrLine: {'line': b'  244 |         core::common::info(\x1b[01;35m\x1b[K"Module [%d] [%d] points in [%.02f]Hz"\x1b[m\x1b[K,\n'}
[4.039362] (ydlidar_sdk) StderrLine: {'line': b'      |                            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.039590] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_restart.cpp:251:29:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.039868] (ydlidar_sdk) StderrLine: {'line': b'  251 |         core::common::error(\x1b[01;35m\x1b[K"Failed to get Lidar Data"\x1b[m\x1b[K);\n'}
[4.040106] (ydlidar_sdk) StderrLine: {'line': b'      |                             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.040335] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_restart.cpp:259:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.040567] (ydlidar_sdk) StderrLine: {'line': b'  259 |     core::common::warn(\x1b[01;35m\x1b[K"Test count %u"\x1b[m\x1b[K, ++count);\n'}
[4.040842] (ydlidar_sdk) StderrLine: {'line': b'      |                        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.041110] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini-sh_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[01;32m\x1b[K main\x1b[m\x1b[K(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.041369] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini-sh_test.cpp:143:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.041715] (ydlidar_sdk) StderrLine: {'line': b'  143 |     error(\x1b[01;35m\x1b[K"Fail to initialize %s"\x1b[m\x1b[K, laser.DescribeError());\n'}
[4.042011] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.042278] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini-sh_test.cpp:151:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.042542] (ydlidar_sdk) StderrLine: {'line': b'  151 |     warn(\x1b[01;35m\x1b[K"Fail to get pitch angle"\x1b[m\x1b[K);\n'}
[4.042852] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.043052] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini-sh_test.cpp:155:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.043276] (ydlidar_sdk) StderrLine: {'line': b'  155 |     info(\x1b[01;35m\x1b[K"Pitch angle [%.02f]\xc2\xb0"\x1b[m\x1b[K, pitch);\n'}
[4.043507] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.043793] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini-sh_test.cpp:162:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.044044] (ydlidar_sdk) StderrLine: {'line': b'  162 |     error(\x1b[01;35m\x1b[K"Fail to start %s"\x1b[m\x1b[K, laser.DescribeError());\n'}
[4.044268] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.044503] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tri_test.cpp:40\x1b[m\x1b[K:\n'}
[4.044761] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.045009] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.045278] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.045503] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.045759] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.046021] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.046251] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.046490] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini-sh_test.cpp:171:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.046755] (ydlidar_sdk) StderrLine: {'line': b'  171 |       info(\x1b[01;35m\x1b[K"[%u] points [%.02f(%.02f)]Hz"\x1b[m\x1b[K,\n'}
[4.046993] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.047207] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tmini-sh_test.cpp:184:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.047430] (ydlidar_sdk) StderrLine: {'line': b'  184 |         error(\x1b[01;35m\x1b[K"Failed to get Lidar Data"\x1b[m\x1b[K);\n'}
[4.047663] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.047914] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.048183] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.048471] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.048766] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.049040] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.049309] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.049566] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.049877] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.050161] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.050435] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.051021] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.051318] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.051528] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.051805] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.052055] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.052271] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.052491] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.052755] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.053000] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.053211] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.053448] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.053711] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.053963] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.054218] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[4.054451] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[4.054710] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.054998] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.055210] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[4.055456] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[4.059715] (ydlidar_sdk) StdoutLine: {'line': b'[ 69%] \x1b[32m\x1b[1mLinking CXX executable ../tri_restart\x1b[0m\n'}
[4.075738] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.076286] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.076719] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[4.077014] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.077257] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[4.077500] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.077784] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[4.078038] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.078281] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[4.078518] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.078786] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[4.079031] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.110740] (ydlidar_sdk) StdoutLine: {'line': b'[ 70%] \x1b[32m\x1b[1mLinking CXX executable ../sdm18_test\x1b[0m\n'}
[4.111334] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_test.cpp:41\x1b[m\x1b[K:\n'}
[4.111917] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.112336] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.112676] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.113414] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.120966] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.121401] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.121771] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.122097] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.122405] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.122860] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.123198] (-) TimerEvent: {}
[4.123578] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.124002] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.124357] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.127750] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.128260] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.128586] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.128969] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.129298] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.129565] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.129896] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.130147] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.130396] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.137885] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.138336] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.138658] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.138959] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.139226] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.139496] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.139953] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.140281] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.140571] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[4.148183] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[4.148548] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.148999] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.149328] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[4.149597] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[4.149931] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tri_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[01;32m\x1b[K main\x1b[m\x1b[K(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.150252] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/tri_test.cpp:331:33:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%llu\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Klong long unsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<LaserPoint>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=\x07-Wformat=\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.150567] (ydlidar_sdk) StderrLine: {'line': b'  331 |       printf("Scan received [\x1b[01;35m\x1b[K%llu\x1b[m\x1b[K] points scanFreq [%.02f]\\n",\n'}
[4.158309] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[01;35m\x1b[K~~~^\x1b[m\x1b[K\n'}
[4.158746] (ydlidar_sdk) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[4.159095] (ydlidar_sdk) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[Klong long unsigned int\x1b[m\x1b[K\n'}
[4.159392] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K%lu\x1b[m\x1b[K\n'}
[4.159714] (ydlidar_sdk) StderrLine: {'line': b'  332 |              \x1b[32m\x1b[Kscan.points.size()\x1b[m\x1b[K,\n'}
[4.160020] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K  \n'}
[4.160298] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[4.160558] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Kstd::vector<LaserPoint>::size_type {aka long unsigned int}\x1b[m\x1b[K\n'}
[4.168065] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.168389] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.168673] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[4.168969] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.169186] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[4.169391] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.169606] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[4.169866] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.170080] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[4.170291] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.170484] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[4.176996] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.177392] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_test2.cpp:8\x1b[m\x1b[K:\n'}
[4.177710] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.178000] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.178286] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.178550] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.178836] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.179085] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.179330] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.179573] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.179929] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.180210] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.180468] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.183986] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.184377] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.184682] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.185004] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.185291] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.185682] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.186003] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.186273] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.186543] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.187844] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.188153] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.188440] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.188778] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.189082] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.189360] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.189679] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.189982] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.190252] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.190507] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.190842] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[4.191090] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[4.191341] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.191605] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.191944] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[4.192234] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[4.210816] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.211340] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.211694] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[4.212040] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.212316] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[4.212591] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.212970] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[4.213247] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.213502] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[4.213770] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.213985] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[4.214179] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.223731] (-) TimerEvent: {}
[4.224430] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/sdm_test.cpp:39\x1b[m\x1b[K:\n'}
[4.224966] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebug\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.225378] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.228160] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.229107] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.233922] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.234841] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.235236] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.235542] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfo\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.235897] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.236277] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.236567] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.236895] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.237218] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.237534] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.242041] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kwarn\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.242409] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.245976] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.246450] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.246865] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.247228] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.247496] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.247788] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kerror\x1b[m\x1b[K(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.248137] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.248507] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[4.253134] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[4.253537] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.253930] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[4.254265] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.254581] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[01;32m\x1b[K main\x1b[m\x1b[K(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.254971] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_test.cpp:285:28:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.255354] (ydlidar_sdk) StderrLine: {'line': b'  285 |         core::common::warn(\x1b[01;35m\x1b[K"module[%d] time[%lld]ms"\x1b[m\x1b[K, scan.moduleNum, dt);\n'}
[4.255712] (ydlidar_sdk) StderrLine: {'line': b'      |                            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.256059] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/examples/gs_test.cpp:287:28:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.256393] (ydlidar_sdk) StderrLine: {'line': b'  287 |         core::common::info(\x1b[01;35m\x1b[K"module[%d] time[%lld]ms"\x1b[m\x1b[K, scan.moduleNum, dt);\n'}
[4.260931] (ydlidar_sdk) StderrLine: {'line': b'      |                            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.261386] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kdebugh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.261839] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.262209] (ydlidar_sdk) StderrLine: {'line': b'  150 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[4.262523] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[4.262844] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::\x1b[01;32m\x1b[Kinfoh\x1b[m\x1b[K(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.263164] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat-security\x07-Wformat-security\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.263488] (ydlidar_sdk) StderrLine: {'line': b'  166 |       \x1b[01;35m\x1b[Kprintf(prefix)\x1b[m\x1b[K;\n'}
[4.266151] (ydlidar_sdk) StderrLine: {'line': b'      |       \x1b[01;35m\x1b[K~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[4.276418] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::\x1b[01;32m\x1b[KprintfDeviceInfo\x1b[m\x1b[K(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.277089] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/mac/dev_ws/omo_robot/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wwrite-strings\x07-Wwrite-strings\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[4.277541] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[4.277962] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.279723] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[4.280247] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.280602] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[4.280973] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.281283] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[4.281602] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.285231] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[4.285614] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[4.316757] (ydlidar_sdk) StdoutLine: {'line': b'[ 72%] \x1b[32m\x1b[1mLinking CXX executable ../tri_and_gs_test\x1b[0m\n'}
[4.323923] (-) TimerEvent: {}
[4.397019] (ydlidar_sdk) StdoutLine: {'line': b'[ 74%] \x1b[32m\x1b[1mLinking CXX executable ../tia_test\x1b[0m\n'}
[4.424119] (-) TimerEvent: {}
[4.494788] (ydlidar_sdk) StdoutLine: {'line': b'[ 76%] \x1b[32m\x1b[1mLinking CXX executable ../tmini_test\x1b[0m\n'}
[4.524754] (-) TimerEvent: {}
[4.541771] (ydlidar_sdk) StdoutLine: {'line': b'[ 78%] \x1b[32m\x1b[1mLinking CXX executable ../tmini-sh_test\x1b[0m\n'}
[4.624931] (-) TimerEvent: {}
[4.630872] (ydlidar_sdk) StdoutLine: {'line': b'[ 80%] \x1b[32m\x1b[1mLinking CXX executable ../et_test\x1b[0m\n'}
[4.660826] (ydlidar_sdk) StdoutLine: {'line': b'[ 80%] Built target sdm18_test\n'}
[4.676399] (ydlidar_sdk) StdoutLine: {'line': b'[ 81%] \x1b[32m\x1b[1mLinking CXX executable ../tea_test\x1b[0m\n'}
[4.725272] (-) TimerEvent: {}
[4.748987] (ydlidar_sdk) StdoutLine: {'line': b'[ 85%] \x1b[32m\x1b[1mLinking CXX executable ../scl_test\x1b[0m\n'}
[4.753009] (ydlidar_sdk) StdoutLine: {'line': b'[ 85%] \x1b[32m\x1b[1mLinking CXX executable ../tof_test\x1b[0m\n'}
[4.785957] (ydlidar_sdk) StdoutLine: {'line': b'[ 85%] Built target tri_restart\n'}
[4.819823] (ydlidar_sdk) StdoutLine: {'line': b'[ 87%] \x1b[32mBuilding C object examples/CMakeFiles/lidar_c_api_test.dir/lidar_c_api_test.c.o\x1b[0m\n'}
[4.825742] (-) TimerEvent: {}
[4.852366] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[Kcc1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcommand-line option \xe2\x80\x98\x1b[01m\x1b[K-std=c++11\x1b[m\x1b[K\xe2\x80\x99 is valid for C++/ObjC++ but not for C\n'}
[4.858169] (ydlidar_sdk) StdoutLine: {'line': b'[ 89%] \x1b[32m\x1b[1mLinking CXX executable ../sdm_test\x1b[0m\n'}
[4.895536] (ydlidar_sdk) StdoutLine: {'line': b'[ 89%] Built target tri_and_gs_test\n'}
[4.925930] (-) TimerEvent: {}
[4.966942] (ydlidar_sdk) StdoutLine: {'line': b'[ 90%] \x1b[32m\x1b[1mLinking CXX executable ../gs_ota\x1b[0m\n'}
[4.968869] (ydlidar_sdk) StdoutLine: {'line': b'[ 92%] \x1b[32m\x1b[1mLinking CXX executable ../gs_restart\x1b[0m\n'}
[4.985863] (ydlidar_sdk) StdoutLine: {'line': b'[ 92%] Built target tia_test\n'}
[5.013595] (ydlidar_sdk) StdoutLine: {'line': b'[ 94%] \x1b[32m\x1b[1mLinking CXX executable ../tri_test\x1b[0m\n'}
[5.025592] (ydlidar_sdk) StdoutLine: {'line': b'[ 96%] \x1b[32m\x1b[1mLinking CXX executable ../lidar_c_api_test\x1b[0m\n'}
[5.026195] (-) TimerEvent: {}
[5.057076] (ydlidar_sdk) StdoutLine: {'line': b'[ 96%] Built target tmini-sh_test\n'}
[5.058177] (ydlidar_sdk) StdoutLine: {'line': b'[ 96%] Built target tmini_test\n'}
[5.126407] (-) TimerEvent: {}
[5.156549] (ydlidar_sdk) StdoutLine: {'line': b'[ 96%] Built target et_test\n'}
[5.205897] (ydlidar_sdk) StdoutLine: {'line': b'[ 96%] Built target tea_test\n'}
[5.226552] (-) TimerEvent: {}
[5.240975] (ydlidar_sdk) StdoutLine: {'line': b'[ 96%] Built target scl_test\n'}
[5.263548] (ydlidar_sdk) StdoutLine: {'line': b'[ 96%] Built target tof_test\n'}
[5.293486] (ydlidar_sdk) StdoutLine: {'line': b'[ 96%] Built target sdm_test\n'}
[5.303416] (ydlidar_sdk) StdoutLine: {'line': b'[ 98%] \x1b[32m\x1b[1mLinking CXX executable ../gs_test\x1b[0m\n'}
[5.314357] (omo_r1_interfaces) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[5.326761] (-) TimerEvent: {}
[5.327607] (omo_r1_interfaces) StdoutLine: {'line': b'-- Found python_cmake_module: 0.11.1 (/opt/ros/jazzy/share/python_cmake_module/cmake)\n'}
[5.346945] (ydlidar_sdk) StdoutLine: {'line': b'[100%] \x1b[32m\x1b[1mLinking CXX executable ../gs_test2\x1b[0m\n'}
[5.347984] (ydlidar_sdk) StdoutLine: {'line': b'[100%] Built target tri_test\n'}
[5.358149] (ydlidar_sdk) StdoutLine: {'line': b'[100%] Built target gs_ota\n'}
[5.358518] (ydlidar_sdk) StdoutLine: {'line': b'[100%] Built target gs_restart\n'}
[5.378071] (ydlidar_sdk) StdoutLine: {'line': b'[100%] Built target lidar_c_api_test\n'}
[5.426910] (-) TimerEvent: {}
[5.521096] (ydlidar_sdk) StdoutLine: {'line': b'[100%] Built target gs_test\n'}
[5.527040] (-) TimerEvent: {}
[5.540730] (omo_r1_interfaces) StdoutLine: {'line': b'-- Found PythonExtra: /home/mac/venv/ros_venv/bin/python3  \n'}
[5.541290] (ydlidar_sdk) StdoutLine: {'line': b'[100%] Built target gs_test2\n'}
[5.564436] (ydlidar_sdk) JobEnded: {'identifier': 'ydlidar_sdk', 'rc': 'SIGINT'}
[5.627200] (-) TimerEvent: {}
[5.727576] (-) TimerEvent: {}
[5.828732] (-) TimerEvent: {}
[5.928995] (-) TimerEvent: {}
[5.971082] (omo_r1_interfaces) StdoutLine: {'line': b'-- Found Python3: /home/mac/venv/ros_venv/bin/python3 (found version "3.12.3") found components: Interpreter Development NumPy Development.Module Development.Embed \n'}
[6.005642] (omo_r1_interfaces) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.17.3 (/opt/ros/jazzy/share/ament_lint_auto/cmake)\n'}
[6.029109] (-) TimerEvent: {}
[6.049665] (omo_r1_interfaces) StdoutLine: {'line': b"-- Added test 'copyright' to check source files copyright and LICENSE\n"}
[6.051580] (omo_r1_interfaces) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[6.052801] (omo_r1_interfaces) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[6.055533] (omo_r1_interfaces) StdoutLine: {'line': b'-- Configuring done (6.0s)\n'}
[6.090436] (omo_r1_interfaces) StdoutLine: {'line': b'-- Generating done (0.0s)\n'}
[6.099566] (omo_r1_interfaces) StdoutLine: {'line': b'-- Build files have been written to: /home/mac/dev_ws/omo_robot/build/omo_r1_interfaces\n'}
[6.109418] (omo_r1_interfaces) JobEnded: {'identifier': 'omo_r1_interfaces', 'rc': 'SIGINT'}
[6.120461] (omo_r1_bringup) JobSkipped: {'identifier': 'omo_r1_bringup'}
[6.120796] (omo_r1_teleop) JobSkipped: {'identifier': 'omo_r1_teleop'}
[6.120846] (omo_r1) JobSkipped: {'identifier': 'omo_r1'}
[6.121187] (-) EventReactorShutdown: {}
